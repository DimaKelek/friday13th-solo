{"version":3,"sources":["Components/Features/Authorization/AuthCommon/Styles/CommonStyles.module.css","Components/Features/Main/Decks/Decks.module.css","Components/Features/Main/MainCommon/Styles/MainCommon.module.css","Components/Features/Main/Learning/Card/Card.module.css","Components/Features/Main/Table/Table.module.css","Components/Common/SandBox/SandBox.module.css","Components/Common/Page404/FrontEndMan/FrontEndMan.module.css","Components/Features/Main/Learning/Learning.module.css","Components/Features/ModalWindows/Modal/Modal.module.css","Components/Common/MyTextInput/MyTextInput.module.css","Components/Common/MyCheckbox/MyCheckbox.module.css","Components/Features/Main/Cards/Cards.module.css","Components/Features/Main/Header/MiniNav/MiniNav.module.css","Components/Features/Main/Table/TableHeader/TableHeader.module.css","Components/Common/MyRadioButton/MyRadioButton.module.css","Components/Features/Authorization/Login/Login.module.css","Components/Features/Authorization/RecoveryPass/RecoveryPass.module.css","Components/Features/Main/Decks/ActionsPanel/ActionsPanel.module.css","Components/Common/MyEditableSpan/MyEditSpan.module.css","Components/Features/Main/Header/Link/Link.module.css","Components/Features/ModalWindows/CommonModalDeckForm/CommonModalDeckForm.module.css","Components/Common/MyTextarea/MyTextarea.module.css","Components/Common/MyButton/MyButton.module.css","Components/Common/MySelect/MySelect.module.css","Components/Common/Page404/Page404.module.css","Components/Features/Authorization/Registration/Registration.module.css","Components/Features/Authorization/NewPass/NewPass.module.css","Components/Features/Main/Main.module.css","Components/Features/Main/Header/Header.module.css","Components/Features/Main/Profile/Profile.module.css","Components/Features/Main/Table/RowItem/RowItem.module.css","Components/Features/Main/Table/Search/Search.module.css","Components/Features/Main/Cards/ActionsPanel/ActionsPanel.module.css","Components/Features/Main/Cards/Rating/Rating.module.css","Components/Common/Ranges/MyRange/MyRange.module.css","Components/Common/Ranges/MyDoubleRange/MyRangeDouble.module.css","Components/Features/Main/Table/TableBody/TableBody.module.css","Components/Features/ModalWindows/CommanModalCardFrom/CommanModalFrom.module.css","Components/Common/MyTextInput/MyTextInput.tsx","Components/Common/MyButton/MyButton.tsx","Components/Common/MyCheckbox/MyCheckbox.tsx","Components/Common/MyEditableSpan/MyEditableSpan.tsx","Components/Common/MySelect/MySelect.tsx","Components/Common/MyRadioButton/MyRadioButton.tsx","Components/Common/Ranges/MyRange/MyRange.tsx","Components/Common/Ranges/MyDoubleRange/MyDoubleRange.tsx","Components/Common/SandBox/SandBox.tsx","Components/Common/Page404/Images/chakres.png","Components/Common/Page404/Images/react.svg","Components/Common/Page404/Images/typescript.svg","Components/Common/Page404/Images/redux.svg","Components/Common/Page404/Images/html5.svg","Components/Common/Page404/Images/css3.svg","Components/Common/Page404/Images/jest.png","Components/Common/Page404/FrontEndMan/FrontEndMan.tsx","Components/Common/Page404/Page404.tsx","Components/Features/Authorization/AuthCommon/Field/Field.tsx","Components/Features/Authorization/Login/Login.tsx","Api/api.ts","Store/app-reducer.ts","Components/Features/Authorization/AuthCommon/utils/errorHandler.ts","Store/recovery-pass-reducer.ts","Store/auth-reducer.ts","Store/registration-reducer.ts","Components/Features/Authorization/Login/LoginContainer.tsx","Components/Features/Authorization/Registration/Registration.tsx","Components/Features/Authorization/Registration/RegistrationContainer.tsx","Components/Features/Authorization/RecoveryPass/message.svg","Components/Features/Authorization/RecoveryPass/RecoveryPass.tsx","Components/Features/Authorization/RecoveryPass/RecoveryContainer.tsx","Components/Features/Authorization/NewPass/NewPass.tsx","Components/Features/Authorization/NewPass/NewPassContainer.tsx","Components/Features/Main/Header/Link/Link.tsx","Components/Features/Main/MainCommon/Icons/decks.svg","Components/Features/Main/MainCommon/Icons/profileIcon.svg","Components/Features/Main/Header/Header.tsx","Components/Features/ModalWindows/Modal/MyModal.tsx","Components/Features/Main/Profile/Profile.tsx","Components/Features/Main/MainCommon/utils/dataHandlers.ts","Store/decks-reducer.ts","Components/Features/Main/Table/TableHeader/TableHeader.tsx","Components/Features/Main/Table/RowItem/RowItem.tsx","Components/Features/Main/Table/TableBody/TableBody.tsx","Components/Features/Main/Table/Pagination/Pagination.tsx","Components/Features/Main/Table/Table.tsx","Components/Features/Main/Table/Search/Search.tsx","Store/learning-reducer.ts","Components/Features/Main/Decks/ActionsPanel/ActionsPanel.tsx","Components/Features/ModalWindows/CommonModalDeckForm/CommonModalDeckFrom.tsx","Components/Features/Main/Decks/Decks.tsx","Store/cards-reducer.ts","Components/Features/Main/Cards/ActionsPanel/ActionsPanel.tsx","Components/Common/MyTextarea/MyTextarea.tsx","Components/Features/ModalWindows/CommanModalCardFrom/CommanModalCardForm.tsx","Components/Features/Main/Cards/star.png","Components/Features/Main/Cards/Rating/Rating.tsx","Components/Features/Main/Cards/Cards.tsx","Components/Features/Main/Learning/Card/Card.tsx","Components/Features/Main/Learning/dimych.jpg","Components/Features/Main/Learning/LearningMode.tsx","Components/Features/Main/Header/MiniNav/MiniNav.tsx","Components/Features/Main/Main.tsx","App/Routes.tsx","Components/Common/ErrorSnackbar/ErrorSnackbar.tsx","App/App.tsx","reportWebVitals.ts","Store/profile-reducer.ts","Store/store.ts","index.tsx"],"names":["module","exports","MyTextInput","props","type","onChange","onChangeText","onKeyPress","onEnter","error","className","errorClassName","variant","restProps","finalInputClassName","S","input","errorInput","finalErrorClassName","textInput","e","currentTarget","value","key","MyButton","disabled","onClick","children","finalClassName","button","MyCheckbox","onChangeChecked","checked","labelCheckbox","check","option","checkInput","checkbox","labelText","MyEditableSpan","autoFocus","onBlur","spanProps","onDoubleClick","restSpanProps","useState","editMode","setEditMode","editSpan_box","span_box","line","MySelect","options","onChangeOption","mappedOptions","map","o","i","select_box","select","MyRadioButton","name","onChangeCallback","finalRadioStyle","radio_container","radio","fakeRadio","radio_box","MyRange","onChangeRange","range","Slider","MyDoubleRange","onChangeRangeFirst","onChangeRangeSecond","min","max","onClickHandler","doubleRange","onChangeDoubleRange","valueLabelDisplay","getAriaValueText","SandBox","editLabel","setEditLabel","setSelect","text","setText","setCheck","rangeStart","setRangeStart","rangeEnd","setRangeEnd","sandBox_container","textInput_box","alert","button_box","reactCheckbox_box","editableSpan_box","undefined","mySelect_box","FrontEndMan","chakres_box","chakres","src","alt","redux","iconRedux","react","iconReact","ts","iconTS","jest","iconJest","html5","iconHTML","css3","iconCSS","Page404","page404_box","man","createField","handler","placeholder","blur","style","minWidth","Login","React","memo","submit","emailValue","passwordValue","rememberMeValue","changeHandler","status","errors","Sc","page_container","form_container","onSubmit","fields","email","password","to","forgot","CircularProgress","link_box","title","link","instanse","axios","create","baseURL","withCredentials","authAPI","authData","post","registerData","delete","data","decksAPI","id","user_id","packName","get","pageNumber","put","cardsAPI","cardsPack_id","cardAnswer","cardQuestion","card","appSlice","createSlice","initialState","isInitialized","needUpdate","reducers","setAppStatus","state","action","payload","setError","setInitialized","setNeedUpdate","actions","handleServerNetworkError","dispatch","errorMessage","response","message","recoverySlice","messageIsSand","passIsRecovered","setStatusSendingMessage","setStatusPassRecovery","authSlice","userData","isLoggedIn","setUserData","changeLoginStatus","registerSlice","register","changeRegisterStatus","LoginContainer","useSelector","auth","app","useDispatch","useEffect","formik","useFormik","initialValues","rememberMe","validate","values","length","a","storedData","_id","avatar","publicCardPacksCount","resetForm","handleSubmit","handleChange","Registration","confPassValue","confirmPassword","cancel","RegistrationContainer","registration","RecoveryPass","isSand","instruction","Message","RecoveryContainer","recovery","from","NewPass","NewPassContainer","isRecovered","token","useParams","resetPasswordToken","Link","path","icon","activeClassName","activeLink","Header","header_container","nav_container","decksIcon","profileIcon","MyModal","closeModal","width","height","prevMessage","afterMessage","styleSettings","background","modal","modal_container","prev","after","Profile","show","setShow","logoutHandler","useCallback","bbb","modalButtons","workSpace","workSpace_container","profile","getDecksRequestDC","filter","getDecks","createAsyncThunk","rejectWithValue","changeMinCount","minCardsCount","maxCardsCount","createDeck","thunkAPI","dataForRequest","getState","decks","visiblePage","requestData","removeDeck","updateDeck","decksSlice","totalCount","selectedDeckID","minSelectedCardsCount","maxSelectedCardsCount","changeDecksFilter","changeVisibleDecksPage","setDeckID","changeMinSelected","changeMaxSelected","changeMaxCount","extraReducers","builder","addCase","fulfilled","cardPacks","cardPacksTotalCount","TableHeader","items","columns","c","row","header","callStyle","RowItem","cells","index","color","renderCells","Sr","rowItem","TableBody","cellStyle","rowItems","item","body","PaginationControlled","page","setPage","count","Math","ceil","Pagination","Table","display","gridTemplateColumns","join","table","tableBody","circular_box","pagination","Search","search_box","search","updateRating","grade","card_id","learning","selectedCardID","learningSlice","entityStatus","modeStart","changeEntityStatus","setModeStart","setSelectedCardID","ActionsPanel","deckID","makerDeckID","setEdit","userID","deck","find","d","deleteButtonHandler","editButtonHandler","buttonsPanel","deleteButton","editButton","learnButton","cardsCount","CommonModalDeckForm","forEach","commonDeckForm","deckName","privacy","form","getFieldProps","touched","buttonBox","Decks","decksState","minValue","setMinValue","maxValue","setMaxValue","setPackName","timeID","setTimeID","showAdd","setShowAdd","showEdit","setShowEdit","requestStart","setTimeout","clearTimeout","myModeHandler","allModeHandler","visibleDecksPageHandler","setMinValueHandler","setMaxValueHandler","searchHandler","target","onCreateDeckClick","createDeckHandler","cardsPack","private","editDeckHandler","decksForUI","lastUpdate","temp","split","splice","updated","userName","created","user_name","cards","getDecksForUI","push","modeBlockStyle","onBlock","myMode","allMode","settings","settings_container","showDecks","my","all","list","list_container","search_container","table_container","getCards","createCard","params","removeCard","cardID","updateCard","cardsSlice","cardsTotalCount","packUserId","changeVisibleCardPage","CardActionsPanel","MyTextarea","textarea","CommonModalCardForm","submitForm","maker","qa","question","answer","commonCardForm","addCard","Rating","stars","star","rating","star_container","Cards","cardsState","setQuestion","setAnswer","showAnswer","setShowAnswer","visibleCardPageHandler","addNewCardHandler","showAnswerCallback","onAddCardClick","answerImg","answerVideo","questionImg","questionVideo","shots","onEditCardClick","rows","cardsForUI","getCardsForUI","floor","Card","getNewCard","setCurrentCard","rotated","setRotated","send","setSend","onNextClick","selectedCard","ratingRequestHandler","ratingPanel","rp","front","click","back","answer_container","success","preloader","LearningMode","currentCard","showModal","setShowModal","getCard","sum","reduce","acc","rand","random","res","newSum","console","log","dimych","start","exit","MiniNav","miniNav","menuItem","home","about","Main","main","content","render","Routes","exact","Alert","elevation","ErrorSnackbar","appError","handleClose","event","reason","openValidate","Snackbar","open","autoHideDuration","onClose","severity","App","position","top","textAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","profileSlice","rootReducer","combineReducers","reducer","store","configureStore","middleware","getDefaultMiddleware","prepend","thunkMiddleware","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.29d33bf8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"page_container\":\"CommonStyles_page_container__3B6j-\",\"form_container\":\"CommonStyles_form_container__2CC98\",\"fields\":\"CommonStyles_fields__hDCTW\",\"link_box\":\"CommonStyles_link_box__2yFki\",\"title\":\"CommonStyles_title__OTw8s\",\"link\":\"CommonStyles_link__1WBRy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings_container\":\"Decks_settings_container__3ODic\",\"showDecks\":\"Decks_showDecks__2HrMw\",\"onBlock\":\"Decks_onBlock__1P__K\",\"myMode\":\"Decks_myMode__2HIhU\",\"allMode\":\"Decks_allMode__1B5n3\",\"my\":\"Decks_my__2lyax\",\"all\":\"Decks_all__2Zdj0\",\"range\":\"Decks_range__1k6Kr\",\"list_container\":\"Decks_list_container__33hgQ\",\"search_container\":\"Decks_search_container__3kIWX\",\"table_container\":\"Decks_table_container__3UWOL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"workSpace\":\"MainCommon_workSpace__18OSG\",\"workSpace_container\":\"MainCommon_workSpace_container__1GzEc\",\"settings\":\"MainCommon_settings__3IZZS\",\"list\":\"MainCommon_list__2opYj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2kOIq\",\"front\":\"Card_front__3GT9T\",\"back\":\"Card_back__MsMYr\",\"answer_container\":\"Card_answer_container__3nFmJ\",\"click\":\"Card_click__2eTEh\",\"rating\":\"Card_rating__3Qg3l\",\"send\":\"Card_send__2Whbr\",\"success\":\"Card_success__3PT7v\",\"preloader\":\"Card_preloader___SzYN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table_table__1gxK2\",\"tableBody\":\"Table_tableBody__LdoYt\",\"pagination\":\"Table_pagination__pzBPQ\",\"circular_box\":\"Table_circular_box__3CUxc\",\"callStyle\":\"Table_callStyle__3zSNP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sandBox_container\":\"SandBox_sandBox_container__xSZvi\",\"textInput_box\":\"SandBox_textInput_box__3yewB\",\"button_box\":\"SandBox_button_box__1L1Zl\",\"reactCheckbox_box\":\"SandBox_reactCheckbox_box__2Z1mO\",\"editableSpan_box\":\"SandBox_editableSpan_box__2Y-tj\",\"mySelect_box\":\"SandBox_mySelect_box__3mN5S\",\"radio_box\":\"SandBox_radio_box__2qxgA\",\"range\":\"SandBox_range__2GLEe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chakres_box\":\"FrontEndMan_chakres_box__3fXXx\",\"chakres\":\"FrontEndMan_chakres__18R4o\",\"ts\":\"FrontEndMan_ts__3iH6Y\",\"redux\":\"FrontEndMan_redux__2o7TL\",\"html5\":\"FrontEndMan_html5__2XtIm\",\"css3\":\"FrontEndMan_css3__2eRt1\",\"jest\":\"FrontEndMan_jest__hrf6h\",\"react\":\"FrontEndMan_react__3zpXc\",\"heart\":\"FrontEndMan_heart__19Rp2\",\"rotation\":\"FrontEndMan_rotation__LfkQ7\",\"orbit\":\"FrontEndMan_orbit__1qIMo\",\"breath\":\"FrontEndMan_breath__38Pws\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"learning\":\"Learning_learning__1a1dd\",\"workSpace\":\"Learning_workSpace__3R78X\",\"openWorkSpace\":\"Learning_openWorkSpace__2z9ht\",\"workSpace_container\":\"Learning_workSpace_container__3KHYT\",\"informationAnime\":\"Learning_informationAnime__3MrkL\",\"instruction\":\"Learning_instruction___7wu1\",\"start\":\"Learning_start__1eG6a\",\"startMode\":\"Learning_startMode__3jIAa\",\"exit\":\"Learning_exit__3KdNB\",\"modal_container\":\"Learning_modal_container__2NOTR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__1BScd\",\"modal_container\":\"Modal_modal_container__29OI6\",\"prev\":\"Modal_prev__3BeLY\",\"after\":\"Modal_after__37SdT\",\"background\":\"Modal_background__2p73V\",\"closeModal\":\"Modal_closeModal__22eFR\",\"backgroundAnime\":\"Modal_backgroundAnime__1zImA\",\"modalAnime\":\"Modal_modalAnime__qGFBk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textInput\":\"MyTextInput_textInput__lgdxl\",\"input\":\"MyTextInput_input__2kPKy\",\"error\":\"MyTextInput_error__2-rTb\",\"errorInput\":\"MyTextInput_errorInput__KzX6I\",\"standard\":\"MyTextInput_standard__jSKXm\",\"light\":\"MyTextInput_light__3-f0l\",\"dark\":\"MyTextInput_dark__cx0Hz\",\"purple\":\"MyTextInput_purple__jQhAn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"option\":\"MyCheckbox_option__Wn8E5\",\"checkInput\":\"MyCheckbox_checkInput__1EtEw\",\"checkbox\":\"MyCheckbox_checkbox__2g4Ol\",\"labelText\":\"MyCheckbox_labelText__2hHr0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"Cards_cards__34r8K\",\"title\":\"Cards_title__zs30U\",\"search\":\"Cards_search__3eVMz\",\"showAnswer\":\"Cards_showAnswer__3-BXj\",\"table_container\":\"Cards_table_container__13CC-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"miniNav\":\"MiniNav_miniNav__RDaT_\",\"menuItem\":\"MiniNav_menuItem__EojNw\",\"home\":\"MiniNav_home__3mQJn\",\"contacts\":\"MiniNav_contacts__3At5l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"TableHeader_header__3OH2n\",\"row\":\"TableHeader_row__OFzqm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio_box\":\"MyRadioButton_radio_box__3EFQc\",\"radio\":\"MyRadioButton_radio__20WiT\",\"fakeRadio\":\"MyRadioButton_fakeRadio__3eOgd\",\"radio_container\":\"MyRadioButton_radio_container__39Ybo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"Login_checkbox__1pgGc\",\"forgot\":\"Login_forgot__I_3Ep\",\"button_box\":\"Login_button_box__3hDIr\",\"button\":\"Login_button__2sv34\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"instruction\":\"RecoveryPass_instruction__2nHGI\",\"button_box\":\"RecoveryPass_button_box__tkzbe\",\"message\":\"RecoveryPass_message__3_7x3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsPanel\":\"ActionsPanel_buttonsPanel__3zYVU\",\"deleteButton\":\"ActionsPanel_deleteButton__2YRdO\",\"learnButton\":\"ActionsPanel_learnButton__3lFjd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"span_box\":\"MyEditSpan_span_box__1MSdM\",\"line\":\"MyEditSpan_line__P3uUF\",\"editSpan_box\":\"MyEditSpan_editSpan_box__1gPVf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Link_link__ggDtj\",\"activeLink\":\"Link_activeLink__2Z1lU\",\"line\":\"Link_line__7lm4i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"CommonModalDeckForm_form__1YlG0\",\"radio\":\"CommonModalDeckForm_radio__3730E\",\"buttonBox\":\"CommonModalDeckForm_buttonBox__1JHqd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"MyTextarea_textarea__2WzZp\",\"error\":\"MyTextarea_error__6TVuJ\",\"errorMessage\":\"MyTextarea_errorMessage__mcQsX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"MyButton_button__282vV\",\"standard\":\"MyButton_standard__20Kc6\",\"dark\":\"MyButton_dark__3MVXQ\",\"purple\":\"MyButton_purple__2jfx1\",\"light\":\"MyButton_light__3HKX9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select_box\":\"MySelect_select_box__2yNw9\",\"select\":\"MySelect_select__pqXX8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page404_box\":\"Page404_page404_box__2VysH\",\"man\":\"Page404_man__3O79p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button_box\":\"Registration_button_box__1jP_j\",\"cancel\":\"Registration_cancel__dtQuX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"instruction\":\"NewPass_instruction__1wvVM\",\"button_box\":\"NewPass_button_box__3TlVD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Main_content__pFfg6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header_container\":\"Header_header_container__oQmjn\",\"nav_container\":\"Header_nav_container__1-QcW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2EVYQ\",\"modalButtons\":\"Profile_modalButtons__2W6FL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rowItem\":\"RowItem_rowItem__2TG9O\",\"deckItemWhite\":\"RowItem_deckItemWhite__1ad2Q\",\"deckItemGray\":\"RowItem_deckItemGray__2EcGN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search_box\":\"Search_search_box__25deb\",\"search\":\"Search_search__2dcSY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsPanel\":\"ActionsPanel_buttonsPanel__1O93d\",\"deleteButton\":\"ActionsPanel_deleteButton__2yrCJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rating\":\"Rating_rating__gKqti\",\"star_container\":\"Rating_star_container__9DtvD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"MyRange_range__1el-e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"doubleRange\":\"MyRangeDouble_doubleRange__39zBt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"TableBody_body__2pzq2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addCard\":\"CommanModalFrom_addCard__ihsxT\"};","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport S from './MyTextInput.module.css'\n\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\ntype SuperInputTextPropsType = DefaultInputPropsType & {\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string | null\n    errorClassName?: string\n    variant?: \"light\" | \"dark\" | \"standard\" | \"purple\"\n}\n\nexport const MyTextInput: React.FC<SuperInputTextPropsType> = props => {\n    const {type = \"text\", onChange, onChangeText, onKeyPress, onEnter, error,\n        className, errorClassName, variant = \"light\", ...restProps} = props\n\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n        onEnter && e.key === 'Enter' && onEnter()\n    }\n\n    const finalInputClassName = `${S.input} ${variant && S[variant]} ${className} ${error && S.errorInput}`\n    const finalErrorClassName = `${S.error} ${errorClassName || ''}`\n\n    return (\n        <div className={S.textInput}>\n            <input\n                type={type}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps}\n            />\n            {error && <span className={finalErrorClassName}>{error}</span>}\n        </div>\n    )\n}","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport S from \"./MyButton.module.css\"\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\ntype MyButtonPropsType = DefaultButtonPropsType & {\r\n    variant?: ElementColorVariants\r\n}\r\n\r\nexport type ElementColorVariants = \"light\" | \"dark\" | \"standard\" | \"purple\"\r\n\r\nexport const MyButton: React.FC<MyButtonPropsType> = props => {\r\n    const {disabled, onClick, className, children, variant, ...restProps} = props\r\n    const finalClassName = `${className} ${S.button} ${variant && S[variant]}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            onClick={onClick}\r\n            disabled={disabled}\r\n            {...restProps}\r\n        >{children}</button>\r\n    );\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport S from \"./MyCheckbox.module.css\"\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\ntype NeonCheckboxPropsType = DefaultInputPropsType & {\r\n    checked?: boolean\r\n    onChangeChecked?: (e: boolean) => void\r\n}\r\n\r\nexport const MyCheckbox: React.FC<NeonCheckboxPropsType> = props => {\r\n    const {onChange, children, onChangeChecked, checked, ...restProps} = props\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n    const labelCheckbox = `${S.check} ${S.option}`\r\n\r\n    return (\r\n        <label className={labelCheckbox}>\r\n            <input\r\n                checked={checked}\r\n                onChange={onChangeCallback}\r\n                type={\"checkbox\"}\r\n                className={S.checkInput}\r\n                {...restProps}\r\n            />\r\n            <span className={S.checkbox}/>\r\n            {children && <span className={S.labelText}>{children}</span>}\r\n        </label>\r\n    )\r\n}","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\nimport {MyTextInput} from \"../MyTextInput/MyTextInput\";\nimport {MyButton} from \"../MyButton/MyButton\";\nimport S from \"./MyEditSpan.module.css\"\n\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\ntype SuperEditableSpanType = DefaultInputPropsType & {\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType\n}\n\nexport const MyEditableSpan: React.FC<SuperEditableSpanType> = props => {\n    const {autoFocus, onBlur, onEnter, spanProps, ...restProps} = props\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n    const [editMode, setEditMode] = useState<boolean>(false)\n\n    const onEnterCallback = () => {\n        setEditMode(false)\n        onEnter && onEnter()\n    }\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false)\n        onBlur && onBlur(e)\n    }\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(true)\n        onDoubleClick && onDoubleClick(e)\n    }\n    const editCallback = () => {\n        setEditMode(true)\n    }\n    return (\n        <div className={S.editSpan_box}>\n            {editMode\n                ? <MyTextInput autoFocus onBlur={onBlurCallback} onEnter={onEnterCallback} {...restProps}/>\n                : <>\n                    <MyButton onClick={editCallback}>✎ Edit</MyButton>\n                    <div className={S.span_box}>\n                        <span onDoubleClick={onDoubleClickCallBack}\n                             className={className} {...restSpanProps}\n                        >{children || restProps.value}</span>\n                        <span className={S.line}/>\n                    </div>\n                </>\n            }\n        </div>\n    )\n}","import React, {ChangeEvent, DetailedHTMLProps, SelectHTMLAttributes} from 'react'\nimport S from \"./MySelect.module.css\";\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: string[]\n    onChangeOption?: (option: any) => void\n}\n\nexport const MySelect: React.FC<SuperSelectPropsType> = props => {\n    const {options, onChange, onChangeOption, ...restProps} = props\n\n    const mappedOptions: any[] = options ? options\n        .map((o, i) => <option key={\"option - \" + i}>{o}</option>) : []\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        onChange && onChange(e)\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n    return (\n        <div className={S.select_box}>\n            <select onChange={onChangeCallback} className={S.select} {...restProps}>\n                {mappedOptions}\n            </select>\n        </div>\n    )\n}","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\nimport S from \"./MyRadioButton.module.css\"\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: string[]\n    onChangeOption?: (option: string) => void\n}\n\nexport const MyRadioButton: React.FC<SuperRadioPropsType> = props => {\n    const {type, name, options, value, onChange, onChangeOption, className, ...restProps} = props\n\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n    const finalRadioStyle = `${S.radio_container} ${className}`\n    const mappedOptions: any[] = options ? options.map((o, i) => (\n        <label key={name + '-' + i} className={finalRadioStyle}>\n            <input\n                type={'radio'}\n                onChange={onChangeCallback}\n                value={o}\n                name={name}\n                checked={o === value}\n                className={S.radio}\n                {...restProps}\n            />\n            <span className={S.fakeRadio}/>\n            {o}\n        </label>\n    )) : []\n\n    return (\n        <div className={S.radio_box}>{mappedOptions}</div>\n    )\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport S from \"./MyRange.module.css\";\nimport {Slider} from \"@material-ui/core\";\n\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\ntype SuperRangePropsType = DefaultInputPropsType & {\n    onChangeRange?: (value: number) => void\n    value?: number | number[]\n};\n\nexport const MyRange: React.FC<SuperRangePropsType> = props => {\n    const {onChangeRange, value} = props\n\n    const onChangeCallback = (e: ChangeEvent<{}>, value: number | number[]) => {\n        onChangeRange && onChangeRange(value as number);\n    }\n\n    return (\n        <div className={S.range}>\n            <Slider\n                value={value}\n                onChange={onChangeCallback}\n            />\n        </div>\n    );\n}","import React, {ChangeEvent} from \"react\";\nimport S from \"./MyRangeDouble.module.css\";\nimport {Slider} from \"@material-ui/core\";\n\ntype SuperDoubleRangePropsType = {\n    onChangeRangeFirst?: (value: number) => void\n    onChangeRangeSecond?: (value: number) => void\n    value: [number, number]\n    disabled?: boolean\n    min?: number\n    max?: number\n    onClickHandler?: (e: ChangeEvent<{}>) => void\n}\n\nexport const MyDoubleRange: React.FC<SuperDoubleRangePropsType> = props => {\n    const {onChangeRangeFirst, onChangeRangeSecond, value, disabled, min, max, onClickHandler} = props\n    const onChangeDoubleRange = (value: [number, number]) => {\n        onChangeRangeFirst && onChangeRangeFirst(value[0])\n        onChangeRangeSecond && onChangeRangeSecond(value[1])\n    }\n\n    const onChangeCallback = (e: ChangeEvent<{}>, value: number | number[]) => {\n        onChangeDoubleRange(value as [number, number])\n    }\n\n    function valuetext(value: number) {\n        return `${value}°C`;\n    }\n\n    return (\n        <div className={S.doubleRange}>\n            <Slider\n                value={value}\n                onChange={onChangeCallback}\n                disabled={disabled}\n                min={min}\n                max={max}\n                valueLabelDisplay=\"auto\"\n                getAriaValueText={valuetext}\n                onClick={onClickHandler}\n            />\n        </div>\n    );\n}","import React, {useState} from \"react\";\r\nimport {MyTextInput} from \"../MyTextInput/MyTextInput\";\r\nimport S from \"./SandBox.module.css\"\r\nimport {MyButton} from \"../MyButton/MyButton\";\r\nimport {MyCheckbox} from \"../MyCheckbox/MyCheckbox\";\r\nimport {MyEditableSpan} from \"../MyEditableSpan/MyEditableSpan\";\r\nimport {MySelect} from \"../MySelect/MySelect\";\r\nimport {MyRadioButton} from \"../MyRadioButton/MyRadioButton\";\r\nimport {MyRange} from \"../Ranges/MyRange/MyRange\";\r\nimport {MyDoubleRange} from \"../Ranges/MyDoubleRange/MyDoubleRange\";\r\n\r\nexport const SandBox: React.FC = props => {\r\n    const options = [\"React\", \"Redux\", \"Typescript\"]\r\n    const [editLabel, setEditLabel] = useState<string>(\"Yooooooooo\")\r\n    const [select, setSelect] = useState<string>(options[0])\r\n    const [text, setText] = useState<string>('')\r\n    const [check, setCheck] = useState<boolean>(false)\r\n    const [rangeStart, setRangeStart] = useState<number>(0)\r\n    const [rangeEnd, setRangeEnd] = useState<number>(100)\r\n\r\n    // const error = text ? '' : 'error'\r\n    const error = \"\"\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text)\r\n        }\r\n    }\r\n    const myButtonCallback = () => {\r\n        alert(\"Здароукиииииииииииии!!\")\r\n    }\r\n    const checkboxTestCallback = () => {\r\n        alert(\"Value my checkbox: \" + check)\r\n    }\r\n\r\n    return (\r\n        <div className={S.sandBox_container}>\r\n            <div className={S.textInput_box}>\r\n                <span>Text Input</span>\r\n                <div>\r\n                    <MyTextInput\r\n                        value={text}\r\n                        onChangeText={setText}\r\n                        onEnter={showAlert}\r\n                        error={error}\r\n                        variant={\"light\"}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={S.button_box}>\r\n                <span>My Button</span>\r\n                <div>\r\n                    <MyButton\r\n                        onClick={myButtonCallback}\r\n                        variant={\"light\"}\r\n                    >Button</MyButton>\r\n                </div>\r\n            </div>\r\n            <div className={S.reactCheckbox_box}>\r\n                <span>My ReactCheckbox</span>\r\n                <div><MyCheckbox checked={check} onChangeChecked={setCheck}>Test Label</MyCheckbox></div>\r\n                <div>\r\n                    <MyButton\r\n                        onClick={checkboxTestCallback}\r\n                        variant={\"dark\"}\r\n                    >Test</MyButton>\r\n                </div>\r\n            </div>\r\n            <div className={S.editableSpan_box}>\r\n                <span>My EditableSpan</span>\r\n                <div>\r\n                    <MyEditableSpan\r\n                        value={editLabel}\r\n                        onChangeText={setEditLabel}\r\n                        spanProps={{children: editLabel ? undefined : 'enter text...'}}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={S.mySelect_box}>\r\n                <span>My Select</span>\r\n                <div>\r\n                    <MySelect\r\n                        options={options}\r\n                        value={select}\r\n                        onChangeOption={setSelect}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={S.radio_box}>\r\n                <span>My Radio Button</span>\r\n                <div>\r\n                    <MyRadioButton\r\n                        name={'radio'}\r\n                        options={options}\r\n                        value={select}\r\n                        onChangeOption={setSelect}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={S.range}>\r\n                <span>My Ranges</span>\r\n                <div>\r\n                    <span>Start value: {rangeStart}</span>\r\n                    <span>End value: {rangeEnd}</span>\r\n                    <MyRange\r\n                        value={rangeStart}\r\n                        onChangeRange={setRangeStart}\r\n                    />\r\n                    <MyDoubleRange\r\n                        value={[rangeStart, rangeEnd]}\r\n                        onChangeRangeFirst={setRangeStart}\r\n                        onChangeRangeSecond={setRangeEnd}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/chakres.d0843979.png\";","export default __webpack_public_path__ + \"static/media/react.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/typescript.b6a67c48.svg\";","export default __webpack_public_path__ + \"static/media/redux.7704ea70.svg\";","export default __webpack_public_path__ + \"static/media/html5.10080bf9.svg\";","export default __webpack_public_path__ + \"static/media/css3.b0696b45.svg\";","export default __webpack_public_path__ + \"static/media/jest.05a3e041.png\";","import React from \"react\";\r\nimport S from \"./FrontEndMan.module.css\";\r\nimport chakres from \"../Images/chakres.png\";\r\nimport iconReact from \"../Images/react.svg\";\r\nimport iconTS from \"../Images/typescript.svg\";\r\nimport iconRedux from \"../Images/redux.svg\";\r\nimport iconHTML from \"../Images/html5.svg\";\r\nimport iconCSS from \"../Images/css3.svg\";\r\nimport iconJest from \"../Images/jest.png\";\r\n\r\nexport const FrontEndMan: React.FC<any> = props => {\r\n    return (\r\n        <div className={S.chakres_box}>\r\n            <img className={S.chakres} src={chakres} alt=\"chakres\"/>\r\n            <div className={S.redux}><img src={iconRedux} alt=\"Redux\"/></div>\r\n            <div className={S.react}><img src={iconReact} alt=\"React\"/></div>\r\n            <div className={S.ts}><img src={iconTS} alt=\"TS\"/></div>\r\n            <div className={S.jest}><img src={iconJest} alt=\"Jest\"/></div>\r\n            <div className={S.html5}><img src={iconHTML} alt=\"HTML\"/></div>\r\n            <div className={S.css3}><img src={iconCSS} alt=\"CSS\"/></div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport S from \"./Page404.module.css\"\r\nimport {FrontEndMan} from \"./FrontEndMan/FrontEndMan\";\r\n\r\ntype Page404PropsType = {}\r\n\r\nexport const Page404: React.FC<Page404PropsType> = props => {\r\n    return (\r\n        <div className={S.page404_box}>\r\n            <div className={S.man}>\r\n                <span>Error 404</span>\r\n                <FrontEndMan/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent} from \"react\";\r\nimport {ElementColorVariants} from \"../../../../Common/MyButton/MyButton\";\r\nimport {MyTextInput} from \"../../../../Common/MyTextInput/MyTextInput\";\r\n\r\nexport const createField = (name: string, value: string, error?: string | null,\r\n                            handler?: (e: ChangeEvent<HTMLInputElement>) => void,\r\n                            variant?: ElementColorVariants, placeholder?: string, type?: string,\r\n                            blur?: (e: React.FocusEvent<any>) => void) => {\r\n\r\n    return (\r\n        <>\r\n            <MyTextInput\r\n                variant={variant}\r\n                placeholder={placeholder}\r\n                type={type}\r\n                onChange={handler}\r\n                name={name}\r\n                onBlur={blur}\r\n                value={value}\r\n                style={{minWidth: \"300px\"}}\r\n                error={error}\r\n            />\r\n        </>\r\n    )\r\n}","import React, {ChangeEventHandler, FocusEventHandler} from \"react\";\r\nimport S from \"./Login.module.css\"\r\nimport Sc from \"../AuthCommon/Styles/CommonStyles.module.css\"\r\nimport {MyCheckbox} from \"../../../Common/MyCheckbox/MyCheckbox\";\r\nimport {MyButton} from \"../../../Common/MyButton/MyButton\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {RequestStatusType} from \"../../../../Store/app-reducer\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {createField} from \"../AuthCommon/Field/Field\";\r\nimport {LoginFormikErrorType} from \"./LoginContainer\";\r\n\r\ntype LoginPropsType = {\r\n    submit: FocusEventHandler<HTMLFormElement>\r\n    changeHandler: ChangeEventHandler<HTMLInputElement>\r\n    emailValue: string\r\n    passwordValue: string\r\n    rememberMeValue: boolean\r\n    status: RequestStatusType\r\n    errors: LoginFormikErrorType\r\n}\r\n\r\nexport const Login: React.FC<LoginPropsType> = React.memo(props => {\r\n    const {submit, emailValue, passwordValue, rememberMeValue, changeHandler, status, errors} = props\r\n\r\n    return (\r\n        <div className={Sc.page_container}>\r\n            <div className={Sc.form_container}>\r\n                <h3>It-incubator</h3>\r\n                <h4>Sign In</h4>\r\n                <form onSubmit={submit}>\r\n                    <div className={Sc.fields}>\r\n                        {createField(\"email\", emailValue, errors.email, changeHandler, \"light\", \"Email\")}\r\n                        {createField(\"password\", passwordValue, errors.password, changeHandler, \"light\", \"Password\", \"password\")}\r\n                        <NavLink to=\"/recovery\"><span className={S.forgot}>Forgot Password</span></NavLink>\r\n                    </div>\r\n                    <div className={S.checkbox}>\r\n                        <MyCheckbox name=\"rememberMe\" checked={rememberMeValue}\r\n                                    onChange={changeHandler}>Remember me</MyCheckbox>\r\n                    </div>\r\n                    <div className={S.button_box}>\r\n                        {status === \"loading\"\r\n                            ? <CircularProgress/>\r\n                            : <MyButton className={S.button} variant=\"purple\" type=\"submit\">Log in</MyButton>\r\n                        }\r\n                    </div>\r\n                </form>\r\n                <div className={Sc.link_box}>\r\n                    <span className={Sc.title}>Don't have an account?</span>\r\n                    <NavLink to=\"/registration\"><span className={Sc.link}>Sign Up</span></NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import axios from \"axios\"\r\nimport {AuthDataType, UserDataType} from \"../Store/auth-reducer\";\r\nimport {RegisterDataType} from \"../Store/registration-reducer\";\r\nimport {ForgotPasswordRequest, RecoveryRequestType} from \"../Store/recovery-pass-reducer\";\r\n\r\nconst instanse = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\",\r\n    withCredentials: true\r\n})\r\n\r\nexport const authAPI = {\r\n    login(authData: AuthDataType) {\r\n        return instanse.post<LoginResponseType>(`/auth/login`, authData)\r\n    },\r\n    registration(registerData: RegisterDataType) {\r\n        return instanse.post<RegistrationResponseType>(`/auth/register`, registerData)\r\n    },\r\n    checkingAuth() {\r\n        return instanse.post<LoginResponseType>(`/auth/me`, {})\r\n    },\r\n    logout() {\r\n        return instanse.delete<ResponseType>(`/auth/me`, {})\r\n    },\r\n    forgot(data: ForgotPasswordRequest) {\r\n        return instanse.post<ResponseType>(`/auth/forgot`, data)\r\n    },\r\n    recoveryPass(data: RecoveryRequestType) {\r\n        return instanse.post<ResponseType>(`/auth/set-new-password`, data)\r\n    }\r\n}\r\n\r\n// types\r\ntype LoginResponseType = UserDataType & {\r\n    error?: string\r\n}\r\ntype ResponseType = {\r\n    info?: string\r\n    error?: string\r\n}\r\ntype RegistrationResponseType = { addedUser: {} } & {\r\n    error?: string\r\n}\r\n\r\nexport const decksAPI = {\r\n    getDecks(data: GetDecksRequestDataType) {\r\n        let id = data.user_id ? `&user_id=${data.user_id}` : \"\"\r\n        let min = data.min ? `&min=${data.min}` : \"\"\r\n        let max = data.max ? `&max=${data.max}` : \"\"\r\n        let packName = data.packName ? `&packName=${data.packName}` : \"\"\r\n        return instanse.get<DeckResponseType>(`/cards/pack?pageCount=7&page=${data.pageNumber}${id}${min}${max}${packName}`)\r\n\r\n    },\r\n    createDeck(data: CreateDeckRequestData) {\r\n        return instanse.post(`/cards/pack`, data)\r\n    },\r\n    removeDeck(id: string) {\r\n        return instanse.delete(`/cards/pack?id=${id}`)\r\n    },\r\n    updateDeck(data: UpdateDeckRequestData) {\r\n        return instanse.put(`/cards/pack`, data)\r\n    }\r\n}\r\n\r\nexport type DeckType = {\r\n    _id: string\r\n    user_id: string\r\n    user_name: string\r\n    private: boolean\r\n    name: string\r\n    path: string\r\n    grade: number\r\n    shots: number\r\n    cardsCount: number\r\n    type: string\r\n    rating: number\r\n    created: string\r\n    updated: string\r\n    more_id: string\r\n    __v: number\r\n}\r\nexport type GetDecksRequestDataType = {\r\n    pageNumber: number\r\n    user_id?: string\r\n    min?: number\r\n    max?: number\r\n    packName?: string\r\n}\r\nexport type DeckResponseType = {\r\n    cardPacks: DeckType[]\r\n    cardPacksTotalCount: number\r\n    minCardsCount: number\r\n    maxCardsCount: number\r\n}\r\n\r\nexport type CreateDeckRequestData = {\r\n    cardsPack: DeckDataType\r\n}\r\nexport type DeckDataType = {\r\n    name: string\r\n    private: boolean\r\n}\r\n\r\nexport type UpdateDeckRequestData = {\r\n    cardsPack: {\r\n        _id: string\r\n        name: string\r\n        private: boolean\r\n    }\r\n}\r\n\r\nexport const cardsAPI = {\r\n    getCards(data: GetCardsRequestDataType) {\r\n        let id = data.cardsPack_id ? `&cardsPack_id=${data.cardsPack_id}` : \"\"\r\n        let min = data.min ? `&min=${data.min}` : \"\"\r\n        let max = data.max ? `&max=${data.max}` : \"\"\r\n        let cardAnswer = data.cardAnswer ? `&cardAnswer=${data.cardAnswer}` : \"\"\r\n        let cardQuestion = data.cardQuestion ? `&cardQuestion=${data.cardQuestion}` : \"\"\r\n        return instanse.get<GetCardsResponseType>(`/cards/card?pageCount=7&page=${data.pageNumber}${id}${min}${max}${cardAnswer}${cardQuestion}`)\r\n    },\r\n    createCard(data: CreateCardDataType) {\r\n        return instanse.post(`/cards/card`, {card: data})\r\n    },\r\n    removeCard(id: string) {\r\n        return instanse.delete(`/cards/card?id=${id}`)\r\n    },\r\n    updateCard(data: UpdateCardRequestType) {\r\n        return instanse.put(`/cards/card`, {card: data})\r\n    },\r\n    updateRating(data: UpdateRatingType) {\r\n        return instanse.put(`/cards/grade`, data)\r\n    }\r\n}\r\n\r\nexport type GetCardsRequestDataType = {\r\n    cardAnswer?: string\r\n    cardQuestion?: string\r\n    cardsPack_id: string\r\n    min?: number\r\n    max?: number\r\n    pageNumber?: number\r\n}\r\nexport type GetCardsResponseType = {\r\n    cards: CardType[]\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    page: number\r\n    pageCount: number\r\n    packUserId: string\r\n}\r\nexport type CardType = {\r\n    answer: string\r\n    question: string\r\n    cardsPack_id: string\r\n    grade: number\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    user_id: string\r\n    created: string\r\n    updated: string\r\n    _id: string\r\n}\r\n\r\nexport type CreateCardDataType = {\r\n    cardsPack_id: string\r\n    question: string\r\n    answer: string\r\n    grade?: number\r\n    shots?: number\r\n    rating?: number\r\n    answerImg?: string\r\n    questionImg?: string\r\n    questionVideo?: string\r\n    answerVideo?: string\r\n    type?: string\r\n}\r\nexport type UpdateCardRequestType = {\r\n    _id: string\r\n    question?: string\r\n    answer?: string\r\n}\r\n\r\nexport type UpdateRatingType = {\r\n    grade: GradeType\r\n    card_id: string\r\n}\r\n\r\nexport type GradeType = 1 | 2 | 3 | 4 | 5","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    status: \"idle\" as RequestStatusType,\r\n    error: null as string | null,\r\n    isInitialized: false,\r\n    needUpdate: true\r\n}\r\n\r\nexport const appSlice = createSlice({\r\n    name: \"app\",\r\n    initialState: initialState,\r\n    reducers: {\r\n        setAppStatus(state, action: PayloadAction<RequestStatusType>) {\r\n            state.status = action.payload\r\n        },\r\n        setError(state, action: PayloadAction<string>) {\r\n            state.error = action.payload\r\n        },\r\n        setInitialized(state, action: PayloadAction<boolean>) {\r\n            state.isInitialized = action.payload\r\n        },\r\n        setNeedUpdate(state, action: PayloadAction<boolean>) {\r\n            state.needUpdate = action.payload\r\n        }\r\n    }\r\n})\r\n\r\nexport const {setAppStatus, setError, setInitialized, setNeedUpdate} = appSlice.actions\r\n\r\n// types\r\nexport type RequestStatusType = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\r\nexport type AppStateType = typeof initialState\r\nexport type AppActionsType =\r\n    ReturnType<typeof setAppStatus>\r\n    | ReturnType<typeof setError>\r\n    | ReturnType<typeof setInitialized>","import {Dispatch} from \"redux\"\r\nimport {AppActionsType, setAppStatus, setError} from \"../../../../../Store/app-reducer\";\r\n\r\nexport const handleServerNetworkError = (error: any, dispatch: ErrorUtilsDispatchType) => {\r\n    const errorMessage = error.response.data.error || (error.message + ', more details in the console')\r\n    dispatch(setError(errorMessage))\r\n    dispatch(setAppStatus(\"failed\"))\r\n    return errorMessage\r\n}\r\n\r\ntype ErrorUtilsDispatchType = Dispatch<AppActionsType>","import {AppThunk} from \"./store\";\r\nimport {authAPI} from \"../Api/api\";\r\nimport {setAppStatus, setError} from \"./app-reducer\";\r\nimport {handleServerNetworkError} from \"../Components/Features/Authorization/AuthCommon/utils/errorHandler\";\r\nimport {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    messageIsSand: false,\r\n    passIsRecovered: false\r\n}\r\n\r\nexport const recoverySlice = createSlice({\r\n    name: \"recovery\",\r\n    initialState: initialState,\r\n    reducers: {\r\n        setStatusSendingMessage(state, action: PayloadAction<boolean>) {\r\n            state.messageIsSand = action.payload\r\n        },\r\n        setStatusPassRecovery(state, action: PayloadAction<boolean>) {\r\n            state.passIsRecovered = action.payload\r\n        }\r\n    }\r\n})\r\n\r\nexport const {setStatusSendingMessage, setStatusPassRecovery} = recoverySlice.actions\r\n\r\n// thunks\r\nexport const forgotPass = (data: ForgotPasswordRequest): AppThunk => async dispatch => {\r\n    try {\r\n        dispatch(setAppStatus(\"loading\"))\r\n        await authAPI.forgot(data)\r\n        dispatch(setStatusSendingMessage(true))\r\n        dispatch(setError(\"\"))\r\n        dispatch(setAppStatus(\"succeeded\"))\r\n    } catch (e) {\r\n        handleServerNetworkError(e, dispatch)\r\n    }\r\n}\r\nexport const recovery = (data: RecoveryRequestType): AppThunk => async dispatch => {\r\n    try {\r\n        dispatch(setAppStatus(\"loading\"))\r\n        await authAPI.recoveryPass(data)\r\n        dispatch(setStatusPassRecovery(true))\r\n        dispatch(setStatusSendingMessage(false))\r\n        dispatch(setError(\"\"))\r\n        dispatch(setAppStatus(\"succeeded\"))\r\n    } catch (e) {\r\n        handleServerNetworkError(e, dispatch)\r\n    }\r\n}\r\n// types\r\nexport type RecoveryRequestType = {\r\n    password: string\r\n    resetPasswordToken: string\r\n}\r\nexport type ForgotPasswordRequest = {\r\n    email: string\r\n    from: string\r\n    message: string\r\n}\r\nexport type RecoveryPassStateType = typeof initialState\r\nexport type RecoveryPassActionsType =\r\n    ReturnType<typeof setStatusSendingMessage>\r\n    | ReturnType<typeof setStatusPassRecovery>","import {authAPI} from \"../Api/api\";\r\nimport {AppThunk} from \"./store\";\r\nimport {setAppStatus, setError, setInitialized} from \"./app-reducer\";\r\nimport {handleServerNetworkError} from \"../Components/Features/Authorization/AuthCommon/utils/errorHandler\";\r\nimport {setStatusPassRecovery} from \"./recovery-pass-reducer\";\r\nimport {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    userData: null as UserDataType | null,\r\n    isLoggedIn: false\r\n}\r\n\r\nexport const authSlice = createSlice({\r\n    name: \"auth\",\r\n    initialState: initialState,\r\n    reducers: {\r\n        setUserData(state, action: PayloadAction<UserDataType | null>) {\r\n            state.userData = action.payload\r\n        },\r\n        changeLoginStatus(state, action: PayloadAction<boolean>) {\r\n            state.isLoggedIn = action.payload\r\n        }\r\n    }\r\n})\r\n\r\nexport const {setUserData, changeLoginStatus} = authSlice.actions\r\n\r\n\r\n// thunks\r\nexport const checkingAuthorization = (): AppThunk => async dispatch => {\r\n    try {\r\n        dispatch(setAppStatus(\"loading\"))\r\n        const response = await authAPI.checkingAuth()\r\n        const storedData: UserDataType = {\r\n            _id: response.data._id,\r\n            name: response.data.name,\r\n            email: response.data.email,\r\n            avatar: response.data.avatar || null,\r\n            publicCardPacksCount: response.data.publicCardPacksCount\r\n        }\r\n        dispatch(setUserData(storedData))\r\n        dispatch(changeLoginStatus(true))\r\n        dispatch(setError(\"\"))\r\n        dispatch(setInitialized(true))\r\n        dispatch(setAppStatus(\"succeeded\"))\r\n    } catch (e) {\r\n        handleServerNetworkError(e, dispatch)\r\n        dispatch(setInitialized(true))\r\n    }\r\n}\r\nexport const login = (authData: AuthDataType): AppThunk => async dispatch => {\r\n    try {\r\n        dispatch(setAppStatus(\"loading\"))\r\n        const response = await authAPI.login(authData)\r\n        const storedData: UserDataType = {\r\n            _id: response.data._id,\r\n            name: response.data.name,\r\n            email: response.data.email,\r\n            avatar: response.data.avatar || null,\r\n            publicCardPacksCount: response.data.publicCardPacksCount\r\n        }\r\n        dispatch(setUserData(storedData))\r\n        dispatch(setStatusPassRecovery(false))\r\n        dispatch(changeLoginStatus(true))\r\n        dispatch(setError(\"\"))\r\n        dispatch(setInitialized(true))\r\n        dispatch(setAppStatus(\"succeeded\"))\r\n    } catch (e) {\r\n        handleServerNetworkError(e, dispatch)\r\n    }\r\n}\r\n\r\nexport const logout = (): AppThunk => async (dispatch) => {\r\n    try {\r\n        dispatch({type: \"jfjdkfjd\", bbb: \"jdjdsnjd\"})\r\n        dispatch(setAppStatus(\"loading\"))\r\n        await authAPI.logout()\r\n        dispatch(changeLoginStatus(false))\r\n        dispatch(setError(\"\"))\r\n        dispatch(setUserData(null))\r\n        dispatch(setAppStatus(\"succeeded\"))\r\n    } catch (e) {\r\n        handleServerNetworkError(e, dispatch)\r\n    }\r\n}\r\n\r\n// types\r\nexport type AuthDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\nexport type UserDataType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string | null\r\n    publicCardPacksCount: number\r\n}\r\nexport type AuthStateType = typeof initialState\r\nexport type AuthActionsType =\r\n    ReturnType<typeof setUserData>\r\n    | ReturnType<typeof changeLoginStatus>\r\n    | ReturnType<typeof setInitialized>","import {AppThunk} from \"./store\";\r\nimport {authAPI} from \"../Api/api\";\r\nimport {setAppStatus, setError} from \"./app-reducer\";\r\nimport {handleServerNetworkError} from \"../Components/Features/Authorization/AuthCommon/utils/errorHandler\";\r\nimport {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    register: false\r\n}\r\n\r\nexport const registerSlice = createSlice({\r\n    name: \"registration\",\r\n    initialState: initialState,\r\n    reducers: {\r\n        changeRegisterStatus(state, action: PayloadAction<boolean>) {\r\n            state.register = action.payload\r\n        }\r\n    }\r\n})\r\n\r\nexport const {changeRegisterStatus} = registerSlice.actions\r\n\r\n// thunks\r\nexport const registration = (registerData: RegisterDataType): AppThunk => async dispatch => {\r\n    try {\r\n        dispatch(setAppStatus(\"loading\"))\r\n        await authAPI.registration(registerData)\r\n        dispatch(changeRegisterStatus(true))\r\n        dispatch(setError(\"\"))\r\n        dispatch(setAppStatus(\"succeeded\"))\r\n    } catch (e) {\r\n        handleServerNetworkError(e, dispatch)\r\n    }\r\n}\r\n// types\r\nexport type RegisterDataType = {\r\n    email: string\r\n    password: string\r\n}\r\nexport type RegistrationStateType = typeof initialState\r\nexport type RegistrationActionsType = ReturnType<typeof changeRegisterStatus>","import React, {useEffect} from \"react\";\r\nimport {Login} from \"./Login\";\r\nimport {useFormik} from \"formik\";\r\nimport {login} from \"../../../../Store/auth-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../Store/store\";\r\nimport {RequestStatusType} from \"../../../../Store/app-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {changeRegisterStatus} from \"../../../../Store/registration-reducer\";\r\n\r\nexport type LoginFormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n}\r\n\r\nexport const LoginContainer = () => {\r\n    const isLoggedIn = useSelector<AppStoreType, boolean>(state => state.auth.isLoggedIn)\r\n    const status = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(changeRegisterStatus(false))\r\n    }, [dispatch])\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: \"\",\r\n            password: \"\",\r\n            rememberMe: false\r\n        },\r\n        validate: (values) => {\r\n            const errors: LoginFormikErrorType = {};\r\n            if(!values.email) {\r\n                errors.email = \"Email is required\"\r\n            } else if(!values.password) {\r\n                errors.password = \"Password is required\"\r\n            } else if(values.password.length < 7) {\r\n                errors.password = \"Password should be more 7 symbols\"\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(login(values))\r\n            formik.resetForm()\r\n        }\r\n    })\r\n\r\n    if(isLoggedIn) {\r\n        return <Redirect to=\"/app/profile\"/>\r\n    }\r\n    return (\r\n        <Login\r\n            submit={formik.handleSubmit}\r\n            emailValue={formik.values.email}\r\n            passwordValue={formik.values.password}\r\n            rememberMeValue={formik.values.rememberMe}\r\n            changeHandler={formik.handleChange}\r\n            status={status}\r\n            errors={formik.errors}\r\n        />\r\n    )\r\n}","import React, {ChangeEventHandler, FocusEventHandler} from \"react\";\r\nimport S from \"./Registration.module.css\"\r\nimport Sc from \"../AuthCommon/Styles/CommonStyles.module.css\"\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {MyButton} from \"../../../Common/MyButton/MyButton\";\r\nimport {RequestStatusType} from \"../../../../Store/app-reducer\";\r\nimport {createField} from \"../AuthCommon/Field/Field\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {RegisterFormikErrorType} from \"./RegistrationContainer\";\r\n\r\ntype RegistrationPropsType = {\r\n    submit: FocusEventHandler<HTMLFormElement>\r\n    changeHandler: ChangeEventHandler<HTMLInputElement>\r\n    emailValue: string\r\n    passwordValue: string\r\n    confPassValue: string\r\n    status: RequestStatusType\r\n    errors: RegisterFormikErrorType\r\n}\r\n\r\nexport const Registration: React.FC<RegistrationPropsType> = React.memo(props => {\r\n    const {submit, changeHandler, emailValue, passwordValue, confPassValue, status, errors} = props\r\n\r\n    return (\r\n        <div className={Sc.page_container}>\r\n            <div className={Sc.form_container}>\r\n                <h3>It-incubator</h3>\r\n                <h4>Sign Up</h4>\r\n                <form onSubmit={submit}>\r\n                    <div className={Sc.fields}>\r\n                        {createField(\"email\", emailValue, errors.email, changeHandler, \"light\", \"Email\", \"text\")}\r\n                        {createField(\"password\", passwordValue, errors.password, changeHandler, \"light\", \"Password\", \"password\")}\r\n                        {createField(\"confirmPassword\", confPassValue, errors.confirmPassword, changeHandler, \"light\", \"Confirm Password\", \"password\")}\r\n                    </div>\r\n                    <div className={S.button_box}>\r\n                        {status === \"loading\"\r\n                            ? <CircularProgress/>\r\n                            : <>\r\n                                <NavLink to=\"/login\">\r\n                                    <MyButton className={S.cancel} variant=\"light\" type=\"button\">Cancel</MyButton>\r\n                                </NavLink>\r\n                                <MyButton variant=\"purple\" type=\"submit\">Registration</MyButton>\r\n                            </>\r\n                        }\r\n                    </div>\r\n                </form>\r\n                <div className={Sc.link_box}>\r\n                    <span className={Sc.title}>Are you already registered?</span>\r\n                    <NavLink to=\"/login\"><span className={Sc.link}>Sign In</span></NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React from \"react\";\r\nimport {Registration} from \"./Registration\";\r\nimport {useFormik} from \"formik\";\r\nimport {registration} from \"../../../../Store/registration-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../Store/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {RequestStatusType} from \"../../../../Store/app-reducer\";\r\n\r\nexport type RegisterFormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    confirmPassword?: string\r\n}\r\n\r\nexport const RegistrationContainer = () => {\r\n    const status = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n    const register = useSelector<AppStoreType, boolean>(state => state.registration.register)\r\n    const dispatch = useDispatch()\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: \"\",\r\n            password: \"\",\r\n            confirmPassword: \"\",\r\n        },\r\n        validate: (values) => {\r\n            const errors: RegisterFormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = \"Email is required\"\r\n            } else if (values.email.length < 11) {\r\n                errors.email = \"Email should be more 10 symbols\"\r\n            } else if (!values.password) {\r\n                errors.password = 'Password is required'\r\n            } else if (values.password.length < 8) {\r\n                errors.password = 'Password must be at least 8 symbols'\r\n            } else if (values.password && !values.confirmPassword) {\r\n                errors.confirmPassword = 'Confirm your password'\r\n            } else if (values.password !== values.confirmPassword) {\r\n                errors.confirmPassword = 'You entered two different passwords.'\r\n            }\r\n            return errors;\r\n        }\r\n        ,\r\n        onSubmit: values => {\r\n            if (values.password === values.confirmPassword) {\r\n                dispatch(registration({email: values.email, password: values.password}))\r\n                formik.resetForm()\r\n            }\r\n        }\r\n    })\r\n\r\n    if (register) {\r\n        return <Redirect to=\"/login\"/>\r\n    }\r\n    return (\r\n        <Registration\r\n            changeHandler={formik.handleChange}\r\n            passwordValue={formik.values.password}\r\n            submit={formik.handleSubmit}\r\n            errors={formik.errors}\r\n            status={status}\r\n            confPassValue={formik.values.confirmPassword}\r\n            emailValue={formik.values.email}\r\n        />\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/message.613ffddc.svg\";","import React, {ChangeEventHandler, FocusEventHandler} from \"react\";\r\nimport S from \"./RecoveryPass.module.css\"\r\nimport Sc from \"../AuthCommon/Styles/CommonStyles.module.css\";\r\nimport {createField} from \"../AuthCommon/Field/Field\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {MyButton} from \"../../../Common/MyButton/MyButton\";\r\nimport {RequestStatusType} from \"../../../../Store/app-reducer\";\r\nimport {RecoveryFormikErrorType} from \"./RecoveryContainer\";\r\nimport message from \"./message.svg\"\r\n\r\ntype RecoveryPassPropsType = {\r\n    submit: FocusEventHandler<HTMLFormElement>\r\n    changeHandler: ChangeEventHandler<HTMLInputElement>\r\n    emailValue: string\r\n    status: RequestStatusType\r\n    errors: RecoveryFormikErrorType\r\n    isSand: boolean\r\n}\r\n\r\nexport const RecoveryPass: React.FC<RecoveryPassPropsType> = React.memo(props => {\r\n    const {submit, emailValue, changeHandler, status, errors, isSand} = props\r\n\r\n    return (\r\n        <div className={Sc.page_container}>\r\n            <div className={Sc.form_container}>\r\n                <h3>It-incubator</h3>\r\n                {!isSand\r\n                    ? <div>\r\n                        <h4>Recovery password</h4>\r\n                        <form onSubmit={submit}>\r\n                            <div className={Sc.fields}>\r\n                                {createField(\"email\", emailValue, errors.email, changeHandler, \"light\", \"Email\", \"text\")}\r\n                            </div>\r\n                            <span className={S.instruction}>\r\n                                Enter your email address and we will send you further instructions\r\n                            </span>\r\n                            <div className={S.button_box}>\r\n                                {status === \"loading\"\r\n                                    ? <CircularProgress/>\r\n                                    : <MyButton variant=\"purple\" type=\"submit\">Send Instructions</MyButton>\r\n                                }\r\n                            </div>\r\n                        </form>\r\n                        <div className={Sc.link_box}>\r\n                            <span className={Sc.title}>Did you remember your password?</span>\r\n                            <NavLink to=\"/login\"><span className={Sc.link}>Try logging in</span></NavLink>\r\n                        </div>\r\n                    </div>\r\n                    : <Message email={emailValue}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\ntype MessagePropsType = {\r\n    email: string\r\n}\r\n\r\nconst Message = (props: MessagePropsType) => {\r\n    return (\r\n        <div className={S.message}>\r\n            <img src={message} alt=\"message\"/>\r\n            <h4>Check your Email</h4>\r\n            <span className={S.instruction}>\r\n                We’ve sent an Email with instructions to {props.email}\r\n            </span>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {RecoveryPass} from \"./RecoveryPass\";\r\nimport {useFormik} from \"formik\";\r\nimport {forgotPass} from \"../../../../Store/recovery-pass-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../Store/store\";\r\nimport {RequestStatusType} from \"../../../../Store/app-reducer\";\r\n\r\nexport type RecoveryFormikErrorType = {\r\n    email?: string\r\n}\r\n\r\nexport const RecoveryContainer = () => {\r\n    const status = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n    const isSand = useSelector<AppStoreType, boolean>(state => state.recovery.messageIsSand)\r\n    const dispatch = useDispatch()\r\n\r\n    const message = `<div style=\"background-color: lime; padding: 15px\">\r\n            password recovery link:\t<a href='https://dimakelek.github.io/friday13th-kelek/#/new-password/$token$'>link</a>\r\n            </div>`\r\n\r\n    const formik = useFormik({\r\n            initialValues: {\r\n                email: \"\",\r\n            },\r\n            validate: (values) => {\r\n                const errors: RecoveryFormikErrorType = {};\r\n                if (!values.email) {\r\n                    errors.email = \"Email is required\"\r\n                } else if (values.email.length < 11) {\r\n                    errors.email = \"Email should be more 10 symbols\"\r\n                }\r\n                return errors;\r\n            },\r\n            onSubmit: values => {\r\n                dispatch(forgotPass({email: values.email, from: \"kelek\", message}))\r\n            }\r\n        }\r\n    )\r\n\r\n    return (\r\n        <RecoveryPass\r\n            errors={formik.errors}\r\n            emailValue={formik.values.email}\r\n            submit={formik.handleSubmit}\r\n            status={status}\r\n            changeHandler={formik.handleChange}\r\n            isSand={isSand}\r\n        />\r\n    )\r\n}","import React, {ChangeEventHandler, FocusEventHandler} from \"react\";\r\nimport S from \"./NewPass.module.css\"\r\nimport Sc from \"../AuthCommon/Styles/CommonStyles.module.css\"\r\nimport {createField} from \"../AuthCommon/Field/Field\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {MyButton} from \"../../../Common/MyButton/MyButton\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {RequestStatusType} from \"../../../../Store/app-reducer\";\r\nimport {NewPassFormikErrorType} from \"./NewPassContainer\";\r\n\r\ntype NewPassPropsType = {\r\n    submit: FocusEventHandler<HTMLFormElement>\r\n    changeHandler: ChangeEventHandler<HTMLInputElement>\r\n    passwordValue: string\r\n    status: RequestStatusType\r\n    errors: NewPassFormikErrorType\r\n}\r\n\r\nexport const NewPass: React.FC<NewPassPropsType> = React.memo(props => {\r\n    const {submit, passwordValue, changeHandler, status, errors} = props\r\n    return (\r\n        <div className={Sc.page_container}>\r\n            <div className={Sc.form_container}>\r\n                <h3>It-incubator</h3>\r\n                <h4>Create new password</h4>\r\n                <form onSubmit={submit}>\r\n                    <div className={Sc.fields}>\r\n                        {createField(\"password\", passwordValue, errors.password, changeHandler, \"light\", \"Password\", \"password\")}\r\n                    </div>\r\n                    <span className={S.instruction}>\r\n                        Create new password and we will send you further instructions to email\r\n                    </span>\r\n                    <div className={S.button_box}>\r\n                        {status === \"loading\"\r\n                            ? <CircularProgress/>\r\n                            : <MyButton variant=\"purple\" type=\"submit\">Create new password</MyButton>\r\n                        }\r\n                    </div>\r\n                </form>\r\n                <div className={Sc.link_box}>\r\n                    <span className={Sc.title}>Did you remember your password?</span>\r\n                    <NavLink to=\"/login\"><span className={Sc.link}>Try logging in</span></NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React from \"react\";\r\nimport {NewPass} from \"./NewPass\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../Store/store\";\r\nimport {RequestStatusType} from \"../../../../Store/app-reducer\";\r\nimport {useFormik} from \"formik\";\r\nimport {recovery} from \"../../../../Store/recovery-pass-reducer\";\r\nimport {Redirect, useParams} from \"react-router-dom\";\r\n\r\nexport type NewPassFormikErrorType = {\r\n    password?: string\r\n}\r\n\r\nexport const NewPassContainer = () => {\r\n    const status = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n    const isRecovered = useSelector<AppStoreType, boolean>(state => state.recovery.passIsRecovered)\r\n    const dispatch = useDispatch()\r\n    const {token} = useParams<{token: string}>()\r\n\r\n    const formik = useFormik({\r\n            initialValues: {\r\n                password: \"\",\r\n            },\r\n            validate: (values) => {\r\n                const errors: NewPassFormikErrorType = {};\r\n                if (!values.password) {\r\n                    errors.password = \"Password is required\"\r\n                } else if (values.password.length < 7) {\r\n                    errors.password = \"Password should be more 6 symbols\"\r\n                }\r\n                return errors;\r\n            },\r\n            onSubmit: values => {\r\n                dispatch(recovery({password: values.password, resetPasswordToken: token}))\r\n                formik.resetForm()\r\n            }\r\n        }\r\n    )\r\n\r\n    if(isRecovered) {\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n    return (\r\n        <NewPass\r\n            submit={formik.handleSubmit}\r\n            changeHandler={formik.handleChange}\r\n            passwordValue={formik.values.password}\r\n            status={status}\r\n            errors={formik.errors}\r\n        />\r\n    )\r\n}","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport S from \"./Link.module.css\";\r\n\r\ntype LinkType = {\r\n    path: string\r\n    icon: string\r\n    title: string\r\n}\r\n\r\nexport const Link: React.FC<LinkType> = props => {\r\n    const {path, icon, title} = props\r\n    return (\r\n        <div className={S.link}>\r\n            <NavLink to={`/app/${path}`} activeClassName={S.activeLink}>\r\n                <div>\r\n                    <img src={icon} alt={`${path}`}/>\r\n                    {title}\r\n                    <span className={S.line}/>\r\n                </div>\r\n            </NavLink>\r\n        </div>\r\n\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/decks.6b61c65f.svg\";","export default __webpack_public_path__ + \"static/media/profileIcon.c211f415.svg\";","import React from \"react\";\r\nimport S from \"./Header.module.css\";\r\nimport {Link} from \"./Link/Link\";\r\nimport decksIcon from \"../MainCommon/Icons/decks.svg\";\r\nimport profileIcon from \"../MainCommon/Icons/profileIcon.svg\";\r\n\r\nexport const Header: React.FC = props => {\r\n    return (\r\n        <div className={S.header_container}>\r\n            <div className={S.nav_container}>\r\n                <h2>It-incubator</h2>\r\n                <nav>\r\n                    <Link path={\"decks\"} icon={decksIcon} title={\"Decks List\"}/>\r\n                    <Link path={\"profile\"} icon={profileIcon} title={\"Profile\"}/>\r\n                </nav>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport S from \"./Modal.module.css\"\r\n\r\ntype ModalProps = {\r\n    closeModal: (value: boolean) => void\r\n    width?: string\r\n    height?: string\r\n    title?: string\r\n    prevMessage?: string\r\n    afterMessage?: string\r\n    data?: any\r\n}\r\n\r\nexport const MyModal: React.FC<ModalProps> = props => {\r\n    const {closeModal, width, height, title, prevMessage, afterMessage, children} = props\r\n\r\n    const styleSettings = {\r\n        width: width,\r\n        height: height,\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={S.background} onClick={() => closeModal(false)}/>\r\n            <div className={S.modal} style={styleSettings}>\r\n                <div className={S.closeModal} onClick={() => closeModal(false)}>X</div>\r\n                <div className={S.modal_container}>\r\n                    {title && <h2>{title}</h2>}\r\n                    {prevMessage && <span className={S.prev}>{prevMessage}</span>}\r\n                    {children}\r\n                    {afterMessage && <span className={S.after}>{prevMessage}</span>}\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}","import React, {useCallback, useState} from \"react\";\r\nimport S from \"./Profile.module.css\"\r\nimport Sc from \"../MainCommon/Styles/MainCommon.module.css\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../Store/store\";\r\nimport {logout, UserDataType} from \"../../../../Store/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {MyButton} from \"../../../Common/MyButton/MyButton\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {RequestStatusType} from \"../../../../Store/app-reducer\";\r\nimport {MyModal} from \"../../ModalWindows/Modal/MyModal\"\r\n\r\ntype ProfilePropsType = {}\r\n\r\nexport const Profile: React.FC<ProfilePropsType> = props => {\r\n    const userData = useSelector<AppStoreType, UserDataType | null>(state => state.auth.userData)\r\n    const status = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n    const dispatch = useDispatch()\r\n\r\n    const [show, setShow] = useState<boolean>(false)\r\n\r\n    const logoutHandler = useCallback(() => {\r\n        dispatch(logout())\r\n    }, [dispatch])\r\n\r\n    if (userData === null) {\r\n        return <Redirect to=\"/login\"/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {show &&\r\n                <MyModal closeModal={setShow} title={\"Are you sure you want to get out?\"}>\r\n                    <div>\r\n                        {status === \"loading\"\r\n                            ? <CircularProgress/>\r\n                            : <div className={S.modalButtons}>\r\n                                <MyButton variant={\"purple\"} onClick={() => setShow(false)}>Stay more ^^</MyButton>\r\n                                <MyButton  onClick={logoutHandler}>Log out</MyButton>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </MyModal>\r\n            }\r\n            <div className={Sc.workSpace}>\r\n                <div className={Sc.workSpace_container}>\r\n                    <div className={S.profile}>\r\n                        <h2>Profile page</h2>\r\n                        <div>Welcome {userData.name}</div>\r\n                        <MyButton onClick={() => setShow(true)}>Log out</MyButton>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}","import {CardType, DeckType, GetDecksRequestDataType} from \"../../../../../Api/api\";\r\nimport {ShowDecksModeType} from \"../../../../../Store/decks-reducer\";\r\n\r\nexport type RenderDeckType = {\r\n    name: string\r\n    cards: number\r\n    lastUpdate: string\r\n    created: string\r\n    makerDeckID?: string\r\n    deckID?: string\r\n}\r\nexport const getDecksForUI = (decks: DeckType[] | null | undefined) => {\r\n    let decksForUI: RenderDeckType[] | null = null\r\n    if(decks) {\r\n        decksForUI = decks.map(d => {\r\n            const lastUpdate = (function (lastUpdate: string) {\r\n                let temp = lastUpdate.split(\"\")\r\n                temp.splice(10)\r\n                return temp.join(\"\")\r\n            }(d.updated))\r\n            const userName = (function (created: string) {\r\n                let temp = created.split(\"\")\r\n                if(temp.length > 15)\r\n                    temp.splice(10)\r\n                return temp.join(\"\")\r\n            }(d.user_name))\r\n            return {\r\n                name: d.name,\r\n                cards: d.cardsCount,\r\n                lastUpdate: lastUpdate,\r\n                created: userName,\r\n                makerDeckID: d.user_id,\r\n                deckID: d._id\r\n            }\r\n        })\r\n    }\r\n    return decksForUI\r\n}\r\n\r\nexport type DataForRequest = GetDecksRequestDataType & {\r\n    filter: ShowDecksModeType\r\n}\r\n\r\nexport const getDecksRequestDC = (data: DataForRequest) => {\r\n    const {filter, max, min, pageNumber, user_id, packName} = data\r\n    return filter === \"My\"\r\n        ? {pageNumber, user_id, min, max, packName}\r\n        : {pageNumber, min, max, packName}\r\n}\r\n\r\nexport type RenderCardType = {\r\n    answer: string\r\n    question: string\r\n    lastUpdate: string\r\n    grade: number\r\n    cardID: string\r\n}\r\n\r\nexport const getCardsForUI = (cards: CardType[] | null) => {\r\n    let cardsForUI: RenderCardType[] | null = null\r\n    if(cards) {\r\n        cardsForUI = cards.map(c => {\r\n            const lastUpdate = (function (lastUpdate: string) {\r\n                let temp = lastUpdate.split(\"\")\r\n                temp.splice(10)\r\n                return temp.join(\"\")\r\n            }(c.updated))\r\n            return {\r\n                answer: c.answer,\r\n                question: c.question,\r\n                lastUpdate: lastUpdate,\r\n                grade: c.grade,\r\n                cardID: c._id\r\n            }\r\n        })\r\n    }\r\n    return cardsForUI\r\n}","import {createAsyncThunk, createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {\r\n    CreateDeckRequestData,\r\n    DeckResponseType,\r\n    decksAPI,\r\n    DeckType,\r\n    GetDecksRequestDataType,\r\n    UpdateDeckRequestData\r\n} from \"../Api/api\";\r\nimport {setAppStatus} from \"./app-reducer\";\r\nimport {ThunkApiType} from \"./store\";\r\nimport {DataForRequest, getDecksRequestDC} from \"../Components/Features/Main/MainCommon/utils/dataHandlers\";\r\nimport {handleServerNetworkError} from \"../Components/Features/Authorization/AuthCommon/utils/errorHandler\";\r\n\r\nconst initialState = {\r\n    decks: null as DeckType[] | null,\r\n    filter: \"All\" as ShowDecksModeType,\r\n    visiblePage: 1,\r\n    totalCount: 0,\r\n    minCardsCount: 0,\r\n    maxCardsCount: 1000000,\r\n    selectedDeckID: \"\",\r\n    minSelectedCardsCount: null as number | null,\r\n    maxSelectedCardsCount: null as number | null\r\n}\r\n\r\nexport const getDecks = createAsyncThunk<DeckResponseType, GetDecksRequestDataType, ThunkApiType>(\"decks/getDecks\",\r\n    async (data, {dispatch, rejectWithValue}) => {\r\n        try {\r\n            dispatch(setAppStatus(\"loading\"))\r\n            const response = await decksAPI.getDecks(data)\r\n            dispatch(changeMinCount(response.data.minCardsCount))\r\n            dispatch(changeMinCount(response.data.maxCardsCount))\r\n            dispatch(setAppStatus(\"succeeded\"))\r\n            return response.data\r\n        } catch (error) {\r\n            return rejectWithValue(handleServerNetworkError(error, dispatch))\r\n        }\r\n    })\r\n\r\nexport const createDeck = createAsyncThunk<void, CreateDeckRequestData, ThunkApiType>(\"decks/createDeck\",\r\n    async (data, thunkAPI) => {\r\n        try {\r\n            thunkAPI.dispatch(setAppStatus(\"loading\"))\r\n            await decksAPI.createDeck(data)\r\n            thunkAPI.dispatch(setAppStatus(\"succeeded\"))\r\n            let dataForRequest: DataForRequest = {\r\n                filter: thunkAPI.getState().decks.filter,\r\n                pageNumber: thunkAPI.getState().decks.visiblePage,\r\n                user_id: thunkAPI.getState().auth.userData?._id,\r\n            }\r\n            let requestData = getDecksRequestDC(dataForRequest)\r\n            thunkAPI.dispatch(getDecks(requestData))\r\n        } catch (error) {\r\n            thunkAPI.dispatch(setAppStatus(\"failed\"))\r\n            return thunkAPI.rejectWithValue(handleServerNetworkError(error, thunkAPI.dispatch))\r\n        }\r\n    })\r\n\r\nexport const removeDeck = createAsyncThunk<void, string, ThunkApiType>(\"decks/removeDeck\",\r\n    async (id, thunkAPI) => {\r\n        try {\r\n            thunkAPI.dispatch(setAppStatus(\"loading\"))\r\n            await decksAPI.removeDeck(id)\r\n            thunkAPI.dispatch(setAppStatus(\"succeeded\"))\r\n            let dataForRequest: DataForRequest = {\r\n                filter: thunkAPI.getState().decks.filter,\r\n                pageNumber: thunkAPI.getState().decks.visiblePage,\r\n                user_id: thunkAPI.getState().auth.userData?._id,\r\n            }\r\n            let requestData = getDecksRequestDC(dataForRequest)\r\n            thunkAPI.dispatch(getDecks(requestData))\r\n        } catch (error) {\r\n            thunkAPI.dispatch(setAppStatus(\"failed\"))\r\n            return thunkAPI.rejectWithValue(handleServerNetworkError(error, thunkAPI.dispatch))\r\n        }\r\n    })\r\n\r\nexport const updateDeck = createAsyncThunk<void, UpdateDeckRequestData, ThunkApiType>(\"decks/updateDeck\",\r\n    async (data, thunkAPI) => {\r\n        try {\r\n            thunkAPI.dispatch(setAppStatus(\"loading\"))\r\n            await decksAPI.updateDeck(data)\r\n            thunkAPI.dispatch(setAppStatus(\"succeeded\"))\r\n            let dataForRequest: DataForRequest = {\r\n                filter: thunkAPI.getState().decks.filter,\r\n                pageNumber: thunkAPI.getState().decks.visiblePage,\r\n                user_id: thunkAPI.getState().auth.userData?._id,\r\n            }\r\n            let requestData = getDecksRequestDC(dataForRequest)\r\n            thunkAPI.dispatch(getDecks(requestData))\r\n        } catch (error) {\r\n            thunkAPI.dispatch(setAppStatus(\"failed\"))\r\n            return thunkAPI.rejectWithValue(handleServerNetworkError(error, thunkAPI.dispatch))\r\n        }\r\n    })\r\n\r\nexport const decksSlice = createSlice({\r\n    name: \"decks\",\r\n    initialState: initialState,\r\n    reducers: {\r\n        changeDecksFilter(state, action: PayloadAction<ShowDecksModeType>) {\r\n            state.filter = action.payload\r\n        },\r\n        changeVisibleDecksPage(state, action: PayloadAction<number>) {\r\n            state.visiblePage = action.payload\r\n        },\r\n        setDeckID(state, action: PayloadAction<string>) {\r\n            state.selectedDeckID = action.payload\r\n        },\r\n        changeMinSelected(state, action: PayloadAction<number>) {\r\n            state.minSelectedCardsCount = action.payload\r\n        },\r\n        changeMaxSelected(state, action: PayloadAction<number>) {\r\n            state.maxSelectedCardsCount = action.payload\r\n        },\r\n        changeMinCount(state, action: PayloadAction<number>) {\r\n            state.minCardsCount = action.payload\r\n        },\r\n        changeMaxCount(state, action: PayloadAction<number>) {\r\n            state.maxCardsCount = action.payload\r\n        }\r\n    },\r\n    extraReducers: builder => {\r\n        builder.addCase(getDecks.fulfilled, (state, action) => {\r\n            state.decks = action.payload.cardPacks\r\n            state.totalCount = action.payload.cardPacksTotalCount\r\n            state.minCardsCount = action.payload.minCardsCount\r\n            state.maxCardsCount = action.payload.maxCardsCount\r\n        })\r\n    }\r\n})\r\n\r\nexport const {changeDecksFilter, changeVisibleDecksPage,\r\n    setDeckID, changeMinSelected, changeMaxSelected, changeMinCount, changeMaxCount} = decksSlice.actions\r\n\r\n\r\n// types\r\nexport type DecksStateType = typeof initialState\r\nexport type DecksActionsType = any\r\nexport type ShowDecksModeType = \"My\" | \"All\"\r\n","import React from \"react\";\r\nimport S from \"./TableHeader.module.css\";\r\nimport Sc from \"../Table.module.css\";\r\nimport {CallStyleType, CallType} from \"../Table\";\r\n\r\ntype TableHeaderPropsType = {\r\n    columns: CallType[]\r\n    callStyle: CallStyleType\r\n}\r\nexport const TableHeader: React.FC<TableHeaderPropsType> = props => {\r\n    const {columns} = props\r\n    const items = columns.map((c, i) => <div key={i} className={S.row}>{c.title}</div>)\r\n\r\n    return <div className={`${S.header} ${Sc.callStyle}`}>{items}</div>\r\n}","import React, {ReactNode} from \"react\";\r\nimport {CallStyleType} from \"../Table\";\r\nimport S from \"./RowItem.module.css\";\r\nimport Sr from \"../TableHeader/TableHeader.module.css\"\r\nimport Sc from \"../Table.module.css\";\r\n\r\ntype RowItemType = {\r\n    cells: Array<string | number | boolean | ReactNode>\r\n    cellStyle: CallStyleType\r\n    index: number\r\n}\r\nexport const RowItem: React.FC<RowItemType> = props => {\r\n    const {cells, index} = props\r\n    const color = index === 0 || index % 2 !== 1 ? \"deckItemGray\" : \"deckItemWhite\"\r\n    const renderCells = cells.map((c, i) => <div key={i} className={Sr.row}>{c}</div>)\r\n\r\n    return <div className={`${S.rowItem} ${S[color]} ${Sc.callStyle}`}>{renderCells}</div>\r\n}","import React, {ReactNode} from \"react\";\r\nimport S from \"./TableBody.module.css\";\r\nimport {CallStyleType} from \"../Table\";\r\nimport {RowItem} from \"../RowItem/RowItem\";\r\n\r\ntype TableBodyPropsType = {\r\n    cellStyle: CallStyleType\r\n    items: (Array<string | number | boolean | ReactNode>)[]\r\n}\r\nexport const TableBody: React.FC<TableBodyPropsType> = props => {\r\n    const {cellStyle, items} = props\r\n\r\n    const rowItems = items.map((item, i) => <RowItem key={i} cells={item} cellStyle={cellStyle} index={i}/>)\r\n    return <div className={S.body}>{rowItems}</div>\r\n}","import React from \"react\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\ntype PaginationPropsType = {\r\n    page: number\r\n    setPage?: (page: number) => void\r\n    totalCount: number\r\n}\r\nexport const PaginationControlled: React.FC<PaginationPropsType> = props => {\r\n    const {page, totalCount, setPage} = props\r\n\r\n    const count = Math.ceil(totalCount / 7)\r\n    const handleChange = (e: React.ChangeEvent<unknown>, value: number) => {\r\n        setPage && setPage(value)\r\n    };\r\n\r\n    return <Pagination count={count} page={page} onChange={handleChange}/>\r\n}","import React, {ReactNode} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../Store/store\";\r\nimport {RequestStatusType} from \"../../../../Store/app-reducer\";\r\nimport S from \"./Table.module.css\";\r\nimport {TableHeader} from \"./TableHeader/TableHeader\";\r\nimport {TableBody} from \"./TableBody/TableBody\"\r\nimport {PaginationControlled} from \"./Pagination/Pagination\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\n\r\nexport type CallType = {\r\n    title: string | React.ReactNode\r\n    width: string\r\n}\r\n\r\nexport type CallStyleType = {\r\n    display: string\r\n    gridTemplateColumns: string\r\n}\r\n\r\ntype TablePropsType = {\r\n    columns: CallType[]\r\n    items: (Array<string | number | boolean | ReactNode>)[]\r\n    totalCount: number\r\n    visiblePage: number\r\n    setPage?: (page: number) => void\r\n}\r\n\r\nexport const Table: React.FC<TablePropsType> = props => {\r\n    const {columns, items, totalCount, visiblePage, setPage} = props\r\n    const status = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n\r\n    const cellStyle = {\r\n        display: \"grid\",\r\n        gridTemplateColumns: columns.map(c => c.width).join(\" \")\r\n    }\r\n    return (\r\n        <div className={S.table}>\r\n            <div className={S.tableBody}>\r\n                <TableHeader columns={columns} callStyle={cellStyle}/>\r\n                {status === \"loading\"\r\n                    ? <div className={S.circular_box}><CircularProgress/></div>\r\n                    : <TableBody cellStyle={cellStyle} items={items}/>\r\n                }\r\n            </div>\r\n            <div className={S.pagination}>\r\n            {totalCount > 7 && <PaginationControlled page={visiblePage} totalCount={totalCount} setPage={setPage}/>}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport S from \"./Search.module.css\";\r\nimport {MyTextInput} from \"../../../../Common/MyTextInput/MyTextInput\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../../Store/store\";\r\nimport {RequestStatusType} from \"../../../../../Store/app-reducer\";\r\n\r\ntype SearchWithButtonPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement> & {\r\n    onEnter?: () => void\r\n}\r\n\r\nexport const Search: React.FC<SearchWithButtonPropsType> = props => {\r\n    const status = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n    return (\r\n        <div className={S.search_box}>\r\n            <MyTextInput\r\n                variant={\"light\"}\r\n                placeholder={\"Search...\"}\r\n                className={S.search}\r\n                disabled={status === \"loading\"}\r\n                {...props}\r\n            />\r\n        </div>\r\n    )\r\n}","import {createAsyncThunk, createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {ThunkApiType} from \"./store\";\r\nimport {setAppStatus} from \"./app-reducer\";\r\nimport {cardsAPI, GradeType} from \"../Api/api\";\r\nimport {handleServerNetworkError} from \"../Components/Features/Authorization/AuthCommon/utils/errorHandler\";\r\n\r\nconst initialState = {\r\n    entityStatus: \"loading\" as LearningStatus,\r\n    modeStart: false,\r\n    selectedCardID: \"\"\r\n}\r\n\r\nexport const updateRating = createAsyncThunk<void, GradeType, ThunkApiType>(\"learning/updateRating\",\r\n    async (grade, {dispatch, getState, rejectWithValue}) => {\r\n        try {\r\n            dispatch(setAppStatus(\"loading\"))\r\n            await cardsAPI.updateRating({card_id: getState().learning.selectedCardID, grade})\r\n            dispatch(setAppStatus(\"succeeded\"))\r\n        } catch (error) {\r\n            dispatch(setAppStatus(\"failed\"))\r\n            return rejectWithValue(handleServerNetworkError(error, dispatch))\r\n        }\r\n    })\r\n\r\nexport const learningSlice = createSlice({\r\n    name: \"learning\",\r\n    initialState: initialState,\r\n    reducers: {\r\n        changeEntityStatus(state, action: PayloadAction<LearningStatus>) {\r\n            state.entityStatus = action.payload\r\n        },\r\n        setModeStart(state, action: PayloadAction<boolean>) {\r\n            state.modeStart = action.payload\r\n        },\r\n        setSelectedCardID(state, action: PayloadAction<string>) {\r\n            state.selectedCardID = action.payload\r\n        }\r\n    }\r\n})\r\n\r\nexport const {changeEntityStatus, setModeStart, setSelectedCardID} = learningSlice.actions\r\n\r\n// thunks\r\n\r\n// types\r\nexport type LearningActionsType = any\r\nexport type LearningStatus = \"idle\" | \"loading\" | \"failed\" | \"succeeded\"","import React, {useCallback} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../../Store/store\";\r\nimport {removeDeck, setDeckID} from \"../../../../../Store/decks-reducer\";\r\nimport S from \"./ActionsPanel.module.css\";\r\nimport {MyButton} from \"../../../../Common/MyButton/MyButton\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {setModeStart} from \"../../../../../Store/learning-reducer\";\r\nimport {DeckType} from \"../../../../../Api/api\";\r\n\r\ntype ActionsPanelType = {\r\n    makerDeckID: string | undefined\r\n    deckID: string | undefined\r\n    setEdit: (value: boolean) => void\r\n}\r\n\r\nexport const ActionsPanel: React.FC<ActionsPanelType> = props => {\r\n    const {deckID, makerDeckID, setEdit} = props\r\n    const userID = useSelector<AppStoreType, string | undefined>(state => state.auth.userData?._id)\r\n    const decks = useSelector<AppStoreType, DeckType[] | null>(state => state.decks.decks)\r\n    const dispatch = useDispatch()\r\n\r\n    let deck = decks && decks.find(d => d._id === deckID)\r\n\r\n    const deleteButtonHandler = useCallback(() => {\r\n        if (deckID) {\r\n            dispatch(removeDeck(deckID))\r\n        }\r\n    }, [dispatch, deckID])\r\n    const editButtonHandler = useCallback(() => {\r\n        setEdit(true)\r\n        dispatch(setDeckID(deckID ?? \"\"))\r\n    }, [setEdit, dispatch, deckID])\r\n    return (\r\n        <div className={S.buttonsPanel}>\r\n            {userID === makerDeckID && <>\r\n                <MyButton onClick={deleteButtonHandler} className={S.deleteButton}>Delete</MyButton>\r\n                <MyButton onClick={editButtonHandler} className={S.editButton} variant={\"standard\"}>Edit</MyButton>\r\n            </>\r\n            }\r\n            <NavLink to={`/app/learning/${deckID}`}>\r\n                <MyButton onClick={() => dispatch(setModeStart(false))}\r\n                          variant={\"purple\"} className={S.learnButton}\r\n                          disabled={deck?.cardsCount === 0}\r\n                >Learn</MyButton>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {MyModal} from \"../Modal/MyModal\";\r\nimport {MyTextInput} from \"../../../Common/MyTextInput/MyTextInput\";\r\nimport {MyButton} from \"../../../Common/MyButton/MyButton\";\r\nimport {useFormik} from \"formik\";\r\nimport {MyRadioButton} from \"../../../Common/MyRadioButton/MyRadioButton\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../Store/store\";\r\nimport {RequestStatusType} from \"../../../../Store/app-reducer\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport S from \"./CommonModalDeckForm.module.css\"\r\nimport {DeckType} from \"../../../../Api/api\";\r\n\r\ntype errorsDeckForm = {\r\n    deckName?: string\r\n}\r\n\r\ntype Option = \"Public\" | \"Private\"\r\n\r\ntype CommonModalDeckFromProps = {\r\n    title: string\r\n    type: \"Add\" | \"Edit\"\r\n    setShow: (value: boolean) => void\r\n    submit: (name: string, privacy: boolean) => void\r\n}\r\n\r\nexport const CommonModalDeckForm: React.FC<CommonModalDeckFromProps> = props => {\r\n    const {setShow, type, title, submit} = props\r\n    const status = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n    const options: Option[] = [\"Public\", \"Private\"]\r\n    const decks = useSelector<AppStoreType, DeckType[] | null>(state => state.decks.decks)\r\n    const selectedDeckID = useSelector<AppStoreType, string>(state => state.decks.selectedDeckID)\r\n\r\n    let name: string = \"\"\r\n    decks && decks.forEach(d => {\r\n        if(d._id === selectedDeckID) {\r\n           name = d.name\r\n        }\r\n    })\r\n\r\n    const commonDeckForm = useFormik({\r\n        initialValues: {\r\n            deckName: type === \"Add\" ? \"\" : name,\r\n            privacy: \"Public\"\r\n        },\r\n        validate: values => {\r\n            const errors: errorsDeckForm = {}\r\n            if (!values.deckName) {\r\n                errors.deckName = \"Deck name is required!!\"\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit: values => {\r\n            submit(values.deckName, values.privacy === \"Private\")\r\n        }\r\n    })\r\n\r\n    return (\r\n        <MyModal closeModal={setShow} title=\"Add new Deck\" width=\"350px\" height=\"310px\">\r\n            <form onSubmit={commonDeckForm.handleSubmit} className={S.form}>\r\n                <MyTextInput\r\n                    {...commonDeckForm.getFieldProps(\"deckName\")}\r\n                    placeholder=\"Deck name ...\"\r\n                    style={{width: \"300px\"}}\r\n                    error={commonDeckForm.touched.deckName ? commonDeckForm.errors.deckName : null}\r\n                />\r\n                <div className={S.radio}>\r\n                    <MyRadioButton\r\n                        {...commonDeckForm.getFieldProps(\"privacy\")}\r\n                        options={options}\r\n                    />\r\n                </div>\r\n                {status === \"loading\"\r\n                    ? <CircularProgress/>\r\n                    : <div className={S.buttonBox}><MyButton variant=\"purple\" type=\"submit\">{title}</MyButton></div>\r\n                }\r\n            </form>\r\n        </MyModal>\r\n    )\r\n}","import React, {ChangeEvent, ReactNode, useCallback, useEffect, useState} from \"react\";\r\nimport S from \"./Decks.module.css\"\r\nimport Sc from \"../MainCommon/Styles/MainCommon.module.css\"\r\nimport {MyDoubleRange} from \"../../../Common/Ranges/MyDoubleRange/MyDoubleRange\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../Store/store\";\r\nimport {\r\n    changeDecksFilter,\r\n    changeMaxSelected,\r\n    changeMinSelected,\r\n    changeVisibleDecksPage,\r\n    createDeck,\r\n    DecksStateType,\r\n    getDecks,\r\n    updateDeck\r\n} from \"../../../../Store/decks-reducer\";\r\nimport {CallType, Table} from \"../Table/Table\";\r\nimport {DataForRequest, getDecksForUI, getDecksRequestDC} from \"../MainCommon/utils/dataHandlers\";\r\nimport {MyButton} from \"../../../Common/MyButton/MyButton\";\r\nimport {RequestStatusType, setNeedUpdate} from \"../../../../Store/app-reducer\";\r\nimport {Search} from \"../Table/Search/Search\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\nimport {ActionsPanel} from \"./ActionsPanel/ActionsPanel\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {CommonModalDeckForm} from \"../../ModalWindows/CommonModalDeckForm/CommonModalDeckFrom\";\r\nimport {CreateDeckRequestData, UpdateDeckRequestData} from \"../../../../Api/api\";\r\n\r\nexport const Decks: React.FC = props => {\r\n    const decksState = useSelector<AppStoreType, DecksStateType>(state => state.decks)\r\n    const userID     = useSelector<AppStoreType, string | undefined>(state => state.auth.userData?._id)\r\n    const status     = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n    const needUpdate = useSelector<AppStoreType, boolean>(state => state.app.needUpdate)\r\n    const dispatch   = useDispatch()\r\n\r\n    const {decks, filter, totalCount, visiblePage, minCardsCount, maxCardsCount, selectedDeckID} = decksState\r\n\r\n    const [minValue, setMinValue] = useState<number>(minCardsCount)\r\n    const [maxValue, setMaxValue] = useState<number>(maxCardsCount)\r\n    const [packName, setPackName] = useState<string>(\"\")\r\n    const [timeID, setTimeID]     = useState<number | null>(null)\r\n    const [showAdd, setShowAdd]   = useState<boolean>(false)\r\n    const [showEdit, setShowEdit]   = useState<boolean>(false)\r\n\r\n    const requestStart = () => {\r\n        let id = setTimeout(async () => {\r\n            let dataForRequest: DataForRequest = {\r\n                filter: filter,\r\n                pageNumber: visiblePage,\r\n                user_id: userID,\r\n                min: minValue,\r\n                max: maxValue,\r\n                packName\r\n            }\r\n            let requestData = getDecksRequestDC(dataForRequest)\r\n            await dispatch(getDecks(requestData))\r\n            setTimeID(null)\r\n        }, 1000)\r\n        setTimeID(+id)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (needUpdate && status !== \"loading\") {\r\n            let dataForRequest: DataForRequest = {\r\n                filter: filter,\r\n                pageNumber: visiblePage,\r\n                user_id: userID,\r\n                min: minValue,\r\n                max: maxValue,\r\n                packName\r\n            }\r\n            let requestData = getDecksRequestDC(dataForRequest)\r\n            dispatch(getDecks(requestData))\r\n            dispatch(setNeedUpdate(false))\r\n        }\r\n    }, [needUpdate, status])\r\n    useEffect(() => {\r\n        if (timeID && status !== \"loading\") {\r\n            clearTimeout(timeID)\r\n            requestStart()\r\n        } else if (status !== \"loading\") {\r\n            requestStart()\r\n        } else {\r\n            dispatch(setNeedUpdate(true))\r\n        }\r\n    }, [filter, visiblePage, dispatch, minValue, maxValue, packName, userID])\r\n\r\n    // handlers\r\n\r\n    const myModeHandler = useCallback(() => {\r\n        dispatch(changeDecksFilter(\"My\"))\r\n    }, [dispatch])\r\n    const allModeHandler = useCallback(() => {\r\n        dispatch(changeDecksFilter(\"All\"))\r\n    }, [dispatch])\r\n    const visibleDecksPageHandler = useCallback((page: number) => {\r\n        dispatch(changeVisibleDecksPage(page))\r\n    }, [dispatch])\r\n    const setMinValueHandler = useCallback((value: number) => {\r\n        setMinValue(value)\r\n        dispatch(changeMinSelected(value))\r\n    }, [dispatch])\r\n    const setMaxValueHandler = useCallback((value: number) => {\r\n        setMaxValue(value)\r\n        dispatch(changeMaxSelected(value))\r\n    }, [dispatch])\r\n    const searchHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        setPackName(e.target.value)\r\n    }, [])\r\n    const onCreateDeckClick = useCallback(() => {\r\n        setShowAdd(true)\r\n    }, [])\r\n\r\n    const createDeckHandler = useCallback(async (name: string, privacy: boolean) => {\r\n        let data: CreateDeckRequestData = {\r\n            cardsPack: {\r\n                name,\r\n                private: privacy\r\n            }\r\n        }\r\n        await dispatch(createDeck(data))\r\n        setShowAdd(false)\r\n    }, [dispatch])\r\n    const editDeckHandler = useCallback(async (name: string, privacy: boolean) => {\r\n        if (selectedDeckID) {\r\n            let data: UpdateDeckRequestData = {\r\n                cardsPack: {\r\n                    _id: selectedDeckID,\r\n                    name,\r\n                    private: privacy\r\n                }\r\n            }\r\n            await dispatch(updateDeck(data))\r\n        }\r\n        setShowEdit(false)\r\n    }, [dispatch, selectedDeckID])\r\n    // data for table\r\n    const columns: CallType[] = [\r\n        {title: \"name\", width: \"230px\"},\r\n        {title: \"count\", width: \"80px\"},\r\n        {title: \"last update\", width: \"120px\"},\r\n        {title: \"maker\", width: \"170px\"},\r\n        {title: \"actions\", width: \"220px\"},\r\n    ]\r\n    const rowItems: (Array<string | number | boolean | ReactNode>)[] = []\r\n    getDecksForUI(decks)?.forEach(o => {\r\n        rowItems.push(\r\n            [<NavLink to={`/app/cards/${o.deckID}`}>{o.name}</NavLink>,\r\n                o.cards, o.lastUpdate, o.created,\r\n                <ActionsPanel makerDeckID={o.makerDeckID} deckID={o.deckID} setEdit={setShowEdit}/>\r\n            ]\r\n        )\r\n    })\r\n\r\n    const modeBlockStyle = `${S.onBlock} ${filter === \"My\" ? S.myMode : S.allMode}`\r\n    const disabled = timeID !== null\r\n        || (decks?.length === 0 && filter === \"My\")\r\n        || decks === null\r\n        || (minValue === 0 && maxValue === 0)\r\n    return (\r\n        <>\r\n            {showAdd && <CommonModalDeckForm title=\"Add new Deck\"\r\n                                             type=\"Add\"\r\n                                             setShow={setShowAdd}\r\n                                             submit={createDeckHandler}\r\n            />}\r\n            {showEdit && <CommonModalDeckForm title=\"Edit Deck\"\r\n                                              type=\"Edit\"\r\n                                              setShow={setShowEdit}\r\n                                              submit={editDeckHandler}\r\n            />}\r\n            <div className={Sc.workSpace}>\r\n                <div className={Sc.workSpace_container}>\r\n                    <div className={Sc.settings}>\r\n                        <div className={S.settings_container}>\r\n                            <h3>Show decks cards</h3>\r\n                            <div className={S.showDecks}>\r\n                                {status === \"loading\"\r\n                                    ? <div><CircularProgress/></div>\r\n                                    : <>\r\n                                        <div className={S.my} onClick={myModeHandler}>My</div>\r\n                                        <div className={S.all} onClick={allModeHandler}>All</div>\r\n                                        <div className={modeBlockStyle}>{filter}</div>\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                            <h3>Number of cards</h3>\r\n                            <div className={S.range}>\r\n                                <MyDoubleRange\r\n                                    value={[minValue, maxValue]}\r\n                                    min={minCardsCount}\r\n                                    max={maxCardsCount}\r\n                                    onChangeRangeFirst={setMinValueHandler}\r\n                                    onChangeRangeSecond={setMaxValueHandler}\r\n                                    disabled={disabled}\r\n                                />\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className={Sc.list}>\r\n                        <div className={S.list_container}>\r\n                            <h2>Decks list</h2>\r\n                            <div className={S.search_container}>\r\n                                <Search onChange={searchHandler}/>\r\n                                <MyButton variant={\"standard\"} disabled={status === \"loading\"}\r\n                                          onClick={onCreateDeckClick}>Add new deck</MyButton>\r\n                            </div>\r\n                            <div className={S.table_container}><Table\r\n                                columns={columns}\r\n                                items={rowItems}\r\n                                totalCount={totalCount}\r\n                                visiblePage={visiblePage}\r\n                                setPage={visibleDecksPageHandler}\r\n                            /></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import {createAsyncThunk, createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {\r\n    cardsAPI,\r\n    CardType,\r\n    CreateCardDataType,\r\n    GetCardsRequestDataType,\r\n    GetCardsResponseType,\r\n    UpdateCardRequestType\r\n} from \"../Api/api\"\r\nimport {setAppStatus} from \"./app-reducer\";\r\nimport {handleServerNetworkError} from \"../Components/Features/Authorization/AuthCommon/utils/errorHandler\";\r\nimport {ThunkApiType} from \"./store\";\r\n\r\nconst initialState = {\r\n    cards: null as CardType[] | null,\r\n    cardsTotalCount: 0,\r\n    visiblePage: 1,\r\n    packUserId: \"\",\r\n    deckID: \"\",\r\n    selectedCardID: \"\"\r\n}\r\n\r\nexport const getCards = createAsyncThunk<GetCardsResponseType, GetCardsRequestDataType, ThunkApiType>(\"cards/getCards\",\r\n    async (data, {dispatch, rejectWithValue}) => {\r\n        try {\r\n            dispatch(setAppStatus(\"loading\"))\r\n            const response = await cardsAPI.getCards(data)\r\n            dispatch(setAppStatus(\"succeeded\"))\r\n            return response.data\r\n        } catch (error) {\r\n            return rejectWithValue(handleServerNetworkError(error, dispatch))\r\n        }\r\n    })\r\n\r\nexport type CreateCardData = {\r\n    data: CreateCardDataType\r\n    deckID: string\r\n}\r\n\r\nexport const createCard = createAsyncThunk<void, CreateCardData, ThunkApiType>(\"cards/createCard\",\r\n    async (params, {dispatch, getState, rejectWithValue}) => {\r\n        try {\r\n            dispatch(setAppStatus(\"loading\"))\r\n            await cardsAPI.createCard(params.data)\r\n            dispatch(setAppStatus(\"succeeded\"))\r\n            dispatch(getCards({cardsPack_id: params.deckID, pageNumber: getState().cards.visiblePage}))\r\n        } catch (error) {\r\n            dispatch(setAppStatus(\"failed\"))\r\n            return rejectWithValue(handleServerNetworkError(error, dispatch))\r\n        }\r\n    })\r\n\r\nexport type RemoverCardData = {\r\n    cardID: string,\r\n    deckID: string\r\n}\r\n\r\nexport const removeCard = createAsyncThunk<void, RemoverCardData, ThunkApiType>(\"cards/removeCard\",\r\n    async (params, {dispatch, rejectWithValue, getState}) => {\r\n        try {\r\n            dispatch(setAppStatus(\"loading\"))\r\n            await cardsAPI.removeCard(params.cardID)\r\n            dispatch(setAppStatus(\"succeeded\"))\r\n            dispatch(getCards({cardsPack_id: params.deckID, pageNumber: getState().cards.visiblePage}))\r\n        } catch (error) {\r\n            dispatch(setAppStatus(\"failed\"))\r\n            return rejectWithValue(handleServerNetworkError(error, dispatch))\r\n        }\r\n    })\r\n\r\ntype UpdateCardDataType = {\r\n    data: UpdateCardRequestType,\r\n    deckID: string\r\n}\r\nexport const updateCard = createAsyncThunk<void, UpdateCardDataType, ThunkApiType>(\"cards/updateCard\",\r\n    async (params, {dispatch, getState, rejectWithValue}) => {\r\n        try {\r\n            dispatch(setAppStatus(\"loading\"))\r\n            await cardsAPI.updateCard(params.data)\r\n            dispatch(setAppStatus(\"succeeded\"))\r\n            dispatch(getCards({cardsPack_id: params.deckID, pageNumber: getState().cards.visiblePage}))\r\n        } catch (error) {\r\n            dispatch(setAppStatus(\"failed\"))\r\n            return rejectWithValue(handleServerNetworkError(error, dispatch))\r\n        }\r\n    })\r\n\r\nexport const cardsSlice = createSlice({\r\n    name: \"cards\",\r\n    initialState: initialState,\r\n    reducers: {\r\n        changeVisibleCardPage(state, action: PayloadAction<number>) {\r\n            state.visiblePage = action.payload\r\n        },\r\n        setSelectedCardID(state, action: PayloadAction<string>) {\r\n            state.selectedCardID = action.payload\r\n        }\r\n    },\r\n    extraReducers: builder => {\r\n        builder.addCase(getCards.fulfilled, (state, action) => {\r\n            state.cards = action.payload.cards\r\n            state.cardsTotalCount = action.payload.cardsTotalCount\r\n            state.visiblePage = action.payload.page\r\n            state.packUserId = action.payload.packUserId\r\n        })\r\n    }\r\n})\r\nexport const {changeVisibleCardPage, setSelectedCardID} = cardsSlice.actions\r\n// thunks\r\n\r\n// types\r\nexport type CardsStateType = typeof initialState\r\nexport type CardsActionsType = any","import React, {useCallback} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../../Store/store\";\r\nimport S from \"./ActionsPanel.module.css\";\r\nimport {MyButton} from \"../../../../Common/MyButton/MyButton\";\r\nimport {removeCard, setSelectedCardID} from \"../../../../../Store/cards-reducer\";\r\n\r\ntype ActionsPanelType = {\r\n    makerDeckID: string | undefined\r\n    deckID: string | undefined\r\n    cardID: string | undefined\r\n    setEdit: (value: boolean) => void\r\n}\r\n\r\nexport const CardActionsPanel: React.FC<ActionsPanelType> = props => {\r\n    const {deckID, makerDeckID, cardID, setEdit} = props\r\n    const userID = useSelector<AppStoreType, string | undefined>(state => state.auth.userData?._id)\r\n    const dispatch = useDispatch()\r\n\r\n    const deleteButtonHandler = useCallback(() => {\r\n        if(deckID && cardID) {\r\n            dispatch(removeCard({cardID, deckID}))\r\n        }\r\n    }, [dispatch, cardID, deckID])\r\n    const editButtonHandler = useCallback(() => {\r\n        dispatch(setSelectedCardID(cardID ?? \"\"))\r\n        setEdit(true)\r\n    }, [dispatch, setEdit, cardID])\r\n\r\n    return (\r\n        <div className={S.buttonsPanel}>\r\n            {userID === makerDeckID ? <>\r\n                    <MyButton onClick={deleteButtonHandler} className={S.deleteButton}>Delete</MyButton>\r\n                    <MyButton onClick={editButtonHandler} variant={\"standard\"}>Edit</MyButton></> :\r\n                <div>This is not your deck man</div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, {ChangeEvent, DetailedHTMLProps, KeyboardEvent, TextareaHTMLAttributes} from \"react\";\r\nimport S from \"./MyTextarea.module.css\"\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<TextareaHTMLAttributes<HTMLTextAreaElement>, HTMLTextAreaElement>\r\n\r\ntype MyTextareaProps = DefaultInputPropsType & {\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string | null\r\n}\r\n\r\nexport const MyTextarea: React.FC<MyTextareaProps> = props => {\r\n    const {onChange, onKeyPress, className, error, onChangeText, onEnter, ...restProps} = props\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLTextAreaElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n        onEnter && e.key === 'Enter' && onEnter()\r\n    }\r\n    const finalClassName = `${className} ${error && S.error} ${S.textarea}`\r\n\r\n    return (\r\n        <>\r\n            <textarea\r\n                className={finalClassName}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                {...restProps}\r\n            />\r\n            <span className={S.errorMessage}>{error}</span>\r\n        </>\r\n\r\n    )\r\n}","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../Store/store\";\r\nimport {RequestStatusType} from \"../../../../Store/app-reducer\";\r\nimport {MyModal} from \"../Modal/MyModal\";\r\nimport {MyTextInput} from \"../../../Common/MyTextInput/MyTextInput\";\r\nimport {MyTextarea} from \"../../../Common/MyTextarea/MyTextarea\";\r\nimport S from \"./CommanModalFrom.module.css\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {MyButton} from \"../../../Common/MyButton/MyButton\";\r\nimport {useFormik} from \"formik\";\r\nimport {CardType} from \"../../../../Api/api\";\r\n\r\ntype CommonModalCardFormProps = {\r\n    title: string\r\n    type: \"Add\" | \"Edit\"\r\n    setShow: (value: boolean) => void\r\n    submitForm: (question: string, answer: string,\r\n                 makerDeckID?: string | undefined, cardID?: string | undefined) => void\r\n}\r\ntype errorsFormType = {\r\n    question?: string\r\n    answer?: string\r\n}\r\n\r\nexport const CommonModalCardForm: React.FC<CommonModalCardFormProps> = props => {\r\n    const {title, setShow, submitForm, type} = props\r\n    const status = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n    const cardID = useSelector<AppStoreType, string>(state => state.cards.selectedCardID)\r\n    const maker  = useSelector<AppStoreType, string>(state => state.cards.packUserId)\r\n    const cards  = useSelector<AppStoreType, CardType[] | null>(state => state.cards.cards)\r\n    const qa: string[] = []\r\n    cards?.forEach(c => {\r\n        if(c._id === cardID) {\r\n            qa.push(c.question)\r\n            qa.push(c.answer)\r\n        }\r\n    })\r\n    const commonCardForm = useFormik({\r\n        initialValues: {\r\n            question: type === \"Add\" ? \"\" : qa[0],\r\n            answer: type === \"Add\" ? \"\" : qa[1]\r\n        },\r\n        validate: values => {\r\n            const errors: errorsFormType = {}\r\n            if(!values.question) {\r\n                errors.question = \"Question is required!\"\r\n            }\r\n            if(!values.answer) {\r\n                errors.answer = \"Answer is  required\"\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit: values => {\r\n            if(type === \"Edit\") {\r\n                submitForm(values.question, values.answer, maker, cardID)\r\n            } else {\r\n                submitForm(values.question, values.answer)\r\n            }\r\n            commonCardForm.resetForm()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <MyModal closeModal={() => setShow(false)}\r\n                 title={title} width=\"350px\" height=\"450px\"\r\n        >\r\n            <form onSubmit={commonCardForm.handleSubmit}>\r\n                <MyTextInput\r\n                    {...commonCardForm.getFieldProps(\"question\")}\r\n                    style={{width: \"300px\"}}\r\n                    placeholder=\"Question ...\"\r\n                    error={commonCardForm.touched.question ? commonCardForm.errors.question : null}\r\n                />\r\n                <MyTextarea\r\n                    {...commonCardForm.getFieldProps(\"answer\")}\r\n                    placeholder=\"Answer ...\"\r\n                    error={commonCardForm.touched.answer ? commonCardForm.errors.answer : null}\r\n                />\r\n                <div className={S.addCard}>\r\n                    {status === \"loading\"\r\n                        ? <CircularProgress/>\r\n                        : <MyButton variant=\"purple\" type=\"submit\">{title}</MyButton>\r\n                    }\r\n                </div>\r\n            </form>\r\n        </MyModal>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/star.7d2e0e14.png\";","import React from \"react\";\r\nimport S from \"./Rating.module.css\"\r\nimport star from \"../star.png\"\r\n\r\ntype RatingProps = {\r\n    grade: number\r\n}\r\n\r\nexport const Rating: React.FC<RatingProps> = props => {\r\n    const {grade} = props\r\n\r\n    let stars = []\r\n    for(let i = 0; i < grade; i++) {\r\n        stars.push(<img key={i} src={star} alt=\"star\"/>)\r\n    }\r\n\r\n    return (\r\n        <div className={S.rating}>\r\n            <div className={S.star_container}>{stars.length === 0 ? \"No information\" : stars}</div>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, ReactNode, useCallback, useEffect, useState} from \"react\";\r\nimport S from \"./Cards.module.css\"\r\nimport Sc from \"../MainCommon/Styles/MainCommon.module.css\"\r\nimport {CallType, Table} from \"../Table/Table\";\r\nimport {Search} from \"../Table/Search/Search\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../Store/store\";\r\nimport {CardsStateType, changeVisibleCardPage, createCard, CreateCardData,\r\n        getCards, updateCard} from \"../../../../Store/cards-reducer\";\r\nimport {getCardsForUI} from \"../MainCommon/utils/dataHandlers\";\r\nimport {GetCardsRequestDataType, UpdateCardRequestType} from \"../../../../Api/api\";\r\nimport {NavLink, useParams} from \"react-router-dom\";\r\nimport {MyButton} from \"../../../Common/MyButton/MyButton\";\r\nimport {RequestStatusType} from \"../../../../Store/app-reducer\";\r\nimport {CardActionsPanel} from \"./ActionsPanel/ActionsPanel\";\r\nimport {MyModal} from \"../../ModalWindows/Modal/MyModal\";\r\nimport {CommonModalCardForm} from \"../../ModalWindows/CommanModalCardFrom/CommanModalCardForm\";\r\nimport {Rating} from \"./Rating/Rating\";\r\n\r\n\r\nexport const Cards: React.FC = () => {\r\n    const cardsState = useSelector<AppStoreType, CardsStateType>(state => state.cards)\r\n    const userID     = useSelector<AppStoreType, string | undefined>(state => state.auth.userData?._id)\r\n    const status     = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n    const {deckID}   = useParams<{deckID: string}>()\r\n    const dispatch   = useDispatch()\r\n\r\n    const {cards, cardsTotalCount, visiblePage, packUserId} = cardsState\r\n\r\n    const [question, setQuestion]     = useState<string>(\"\")\r\n    const [timeID, setTimeID]         = useState<number | null>(null)\r\n\r\n    const [answer, setAnswer]         = useState<string>(\"\")\r\n    const [showAnswer, setShowAnswer] = useState<boolean>(false)\r\n    const [showEdit, setShowEdit]     = useState<boolean>(false)\r\n    const [showAdd, setShowAdd]       = useState<boolean>(false)\r\n\r\n    const requestStart = () => {\r\n        let id = setTimeout(async () => {\r\n            let requestData: GetCardsRequestDataType = {\r\n                cardQuestion: question,\r\n                cardsPack_id: deckID,\r\n                pageNumber: visiblePage\r\n            }\r\n            await dispatch(getCards(requestData))\r\n            setTimeID(null)\r\n        }, 500)\r\n        setTimeID(+id)\r\n    }\r\n    useEffect(() => {\r\n        if(deckID !== \"\") {\r\n            if (timeID) {\r\n                clearTimeout(timeID)\r\n                requestStart()\r\n            } else {\r\n                requestStart()\r\n            }\r\n        }\r\n    }, [deckID, visiblePage, question])\r\n\r\n    const visibleCardPageHandler = useCallback((page: number) => {\r\n        dispatch(changeVisibleCardPage(page))\r\n    }, [dispatch])\r\n    const searchHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        setQuestion(e.target.value)\r\n    }, [])\r\n    const addNewCardHandler = useCallback(() => {\r\n        setShowAdd(true)\r\n    }, [])\r\n    const showAnswerCallback = useCallback((answer: string) => {\r\n        setShowAnswer(true)\r\n        setAnswer(answer)\r\n    }, [])\r\n\r\n    const onAddCardClick = useCallback((question: string, answer: string) => {\r\n        const params: CreateCardData = {\r\n            data: {\r\n                question,\r\n                answer,\r\n                cardsPack_id: deckID,\r\n                grade: 0,\r\n                answerImg: \"\",\r\n                answerVideo: \"\",\r\n                questionImg: \"\",\r\n                questionVideo: \"\",\r\n                rating: 0,\r\n                shots: 0,\r\n                type: \"card\"\r\n            },\r\n            deckID\r\n        }\r\n        dispatch(createCard(params))\r\n        setShowAdd(false)\r\n    }, [deckID, dispatch])\r\n    const onEditCardClick = useCallback(async (question: string, answer: string,\r\n                                   makerDeckID: string | undefined, cardID: string | undefined) => {\r\n        if (userID === makerDeckID && deckID) {\r\n            let data: UpdateCardRequestType = {\r\n                _id: cardID ?? \"\",\r\n                question,\r\n                answer\r\n            }\r\n            await dispatch(updateCard({data, deckID}))\r\n        }\r\n        setShowEdit(false)\r\n    }, [dispatch, deckID, userID])\r\n\r\n    // data for table\r\n    const columns: CallType[] = [\r\n        {title: \"question\", width: \"2fr\"},\r\n        {title: \"Answer\", width: \"0.5fr\"},\r\n        {title: \"last update\", width: \"0.6fr\"},\r\n        {title: \"grade\", width: \"0.7fr\"},\r\n        {title: \"actions\", width: \"1fr\"},\r\n    ]\r\n    const rows: (Array<string | number | boolean | ReactNode>)[] = []\r\n    getCardsForUI(cards)?.forEach(c => {\r\n        rows.push([c.question, <span onClick={() => showAnswerCallback(c.answer)} className={S.showAnswer}>Show</span>,\r\n            c.lastUpdate, <Rating grade={Math.floor(c.grade)}/>,\r\n            <CardActionsPanel setEdit={setShowEdit} makerDeckID={packUserId} deckID={deckID} cardID={c.cardID}/>\r\n        ])\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {showAdd && <CommonModalCardForm title={\"Add new Card\"}\r\n                                             setShow={setShowAdd}\r\n                                             submitForm={onAddCardClick}\r\n                                             type=\"Add\"\r\n            />}\r\n            {showEdit && <CommonModalCardForm title={\"Edit Card\"}\r\n                                              setShow={setShowEdit}\r\n                                              submitForm={onEditCardClick}\r\n                                              type=\"Edit\"\r\n            />}\r\n            {showAnswer && <MyModal closeModal={() => setShowAnswer(false)}\r\n                                    title={\"Answer for your question!!\"} width=\"350px\"><div>{answer}</div>\r\n            </MyModal>}\r\n\r\n\r\n            <div className={Sc.workSpace}>\r\n                <div className={Sc.workSpace_container}>\r\n                    <div className={S.cards}>\r\n                        <div className={S.title}>\r\n                            <NavLink to={\"/app/decks\"}>&#129044;</NavLink>\r\n                            <h2>Cards list</h2>\r\n                        </div>\r\n                        <div className={S.search}>\r\n                            <Search onChange={searchHandler}/>\r\n                            {userID === packUserId &&\r\n                            <MyButton onClick={addNewCardHandler} variant={\"standard\"}\r\n                                      disabled={status === \"loading\"}>Add New Card</MyButton>\r\n                            }\r\n                        </div>\r\n                        <div className={S.table_container}><Table\r\n                            columns={columns}\r\n                            items={rows}\r\n                            totalCount={cardsTotalCount}\r\n                            visiblePage={visiblePage}\r\n                            setPage={visibleCardPageHandler}\r\n                        /></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React, {useCallback, useState} from \"react\";\r\nimport S from \"./Card.module.css\"\r\nimport {CardType, GradeType} from \"../../../../../Api/api\";\r\nimport {MyButton} from \"../../../../Common/MyButton/MyButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../../Store/store\";\r\nimport {setSelectedCardID, updateRating} from \"../../../../../Store/learning-reducer\";\r\nimport {RequestStatusType} from \"../../../../../Store/app-reducer\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\n\r\ntype CardProps = {\r\n    card: CardType | undefined\r\n    setCurrentCard: (card: CardType) => void\r\n    getNewCard: (cards: CardType[]) => CardType\r\n}\r\n\r\ntype RatingPanelDataType = {\r\n    title: string\r\n    grade: GradeType\r\n}\r\n\r\nexport const Card: React.FC<CardProps> = props => {\r\n    const {card, getNewCard, setCurrentCard} = props\r\n    const cards = useSelector<AppStoreType, CardType[] | null>(state => state.cards.cards)\r\n    const status = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n    const dispatch = useDispatch()\r\n\r\n    const [rotated, setRotated] = useState<boolean>(false)\r\n    const [send, setSend] = useState<boolean>(false)\r\n\r\n    const onNextClick = useCallback(() => {\r\n        if (cards) {\r\n            setTimeout(() => {\r\n                setSend(false)\r\n                let selectedCard = getNewCard(cards)\r\n                setCurrentCard(selectedCard)\r\n                dispatch(setSelectedCardID(selectedCard._id))\r\n            }, 500)\r\n        }\r\n        setRotated(false)\r\n    }, [cards, getNewCard, setCurrentCard, dispatch])\r\n\r\n    const ratingRequestHandler = async (grade: GradeType) => {\r\n        await dispatch(updateRating(grade))\r\n        setSend(true)\r\n    }\r\n\r\n    const ratingPanelData: RatingPanelDataType[] = [\r\n        {title: \"Terrible\", grade: 1},\r\n        {title: \"Bad\", grade: 2},\r\n        {title: \"+ / -\", grade: 3},\r\n        {title: \"Good\", grade: 4},\r\n        {title: \"Excellent\", grade: 5}\r\n    ]\r\n    const ratingPanel = ratingPanelData.map((rp, i) => {\r\n        return <MyButton key={i}\r\n                         variant={\"standard\"}\r\n                         onClick={() => ratingRequestHandler(rp.grade)}\r\n        >{rp.title}</MyButton>\r\n    })\r\n    \r\n    return (\r\n        <div className={S.card}>\r\n            <div className={`${S.front} ${rotated && S.click}`} onClick={() => setRotated(true)}>\r\n                <h3>Question</h3>\r\n                <span>{card?.question}</span>\r\n                <img src={\"https://goo.su/5SAB\"} alt=\"kappa\"/>\r\n            </div>\r\n            <div className={`${S.back} ${rotated && S.click}`}>\r\n                <h3>Answer</h3>\r\n                <div className={S.answer_container}><p>{card?.answer}</p></div>\r\n                <div className={`${S.rating} ${send && S.send}`}>\r\n                    {!send \r\n                        ? (status === \"loading\" ? <div className={S.preloader}><CircularProgress/></div> : ratingPanel) \r\n                        : (<div className={S.success}>\r\n                                {status === \"succeeded\" ? \"Success bro!!\" : \"Something went wrong bro!!\"}\r\n                        </div>)\r\n                    }\r\n                </div>\r\n                <MyButton onClick={onNextClick}\r\n                          variant={\"purple\"}\r\n                          disabled={status === \"loading\"}\r\n                >Next</MyButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/dimych.9dabc1b8.jpg\";","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport S from \"./Learning.module.css\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../Store/store\";\r\nimport {changeEntityStatus, LearningStatus, setModeStart, setSelectedCardID} from \"../../../../Store/learning-reducer\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\nimport {NavLink, useParams} from \"react-router-dom\";\r\nimport {getCards} from \"../../../../Store/cards-reducer\";\r\nimport {CardType, GetCardsRequestDataType} from \"../../../../Api/api\";\r\nimport {Card} from \"./Card/Card\";\r\nimport {MyModal} from \"../../ModalWindows/Modal/MyModal\";\r\nimport dimych from \"./dimych.jpg\"\r\nimport {MyButton} from \"../../../Common/MyButton/MyButton\";\r\n\r\ntype LearningModeProps = {}\r\n\r\nexport const LearningMode: React.FC<LearningModeProps> = React.memo(props => {\r\n    setTimeout(() => {\r\n        dispatch(changeEntityStatus(\"succeeded\"))\r\n    }, 1000)\r\n    const status = useSelector<AppStoreType, LearningStatus>(state => state.learning.entityStatus)\r\n    const modeStart = useSelector<AppStoreType, boolean>(state => state.learning.modeStart)\r\n    const cards = useSelector<AppStoreType, CardType[] | null>(state => state.cards.cards)\r\n    const {deckID} = useParams<{ deckID: string }>()\r\n    const dispatch = useDispatch()\r\n\r\n    const [currentCard, setCurrentCard] = useState<CardType>({} as CardType)\r\n    const [showModal, setShowModal] = useState<boolean>(false)\r\n\r\n    const getCard = useCallback((cards: CardType[]) => {\r\n        const sum = cards.reduce((acc, card) => acc + (6 - card.grade) * (6 - card.grade), 0);\r\n        const rand = Math.random() * sum;\r\n        const res = cards.reduce((acc: { sum: number, id: number }, card, i) => {\r\n                const newSum = acc.sum + (6 - card.grade) * (6 - card.grade);\r\n                return {sum: newSum, id: newSum < rand ? i : acc.id}\r\n            }\r\n            , {sum: 0, id: -1});\r\n        console.log('test: ', sum, rand, res)\r\n\r\n        return cards[res.id + 1];\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const requestStart = () => {\r\n            setTimeout(() => {\r\n                let requestData: GetCardsRequestDataType = {\r\n                    cardsPack_id: deckID,\r\n                    pageNumber: 1\r\n                }\r\n                dispatch(getCards(requestData))\r\n            }, 500)\r\n        }\r\n        if (deckID !== undefined) {\r\n            requestStart()\r\n        }\r\n        return () => {\r\n            dispatch(setModeStart(false))\r\n        }\r\n    }, [dispatch, deckID])\r\n    useEffect(() => {\r\n        if (cards) {\r\n            let selectedCard = getCard(cards)\r\n            setCurrentCard(selectedCard)\r\n            dispatch(setSelectedCardID(selectedCard._id))\r\n        }\r\n    }, [modeStart, cards, dispatch, getCard])\r\n    const onStartClick = () => {\r\n        dispatch(changeEntityStatus(\"loading\"))\r\n        setTimeout(() => {\r\n            dispatch(changeEntityStatus(\"succeeded\"))\r\n            dispatch(setModeStart(true))\r\n        }, 1000)\r\n    }\r\n\r\n    const dimychHandler = () => {\r\n        dispatch(setSelectedCardID(\"\"))\r\n        dispatch(setModeStart(false))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {showModal &&\r\n                <MyModal closeModal={setShowModal} width=\"300px\" height=\"400px\"\r\n                         title=\"Ну шо ты бро всё выучил уже?\">\r\n                   <div className={S.modal_container}>\r\n                       <img src={dimych} alt=\"dimych\"/>\r\n                   </div>\r\n                    <NavLink to={\"/app/decks\"}>\r\n                        <MyButton variant={\"purple\"} onClick={dimychHandler}>Летим 🚀</MyButton>\r\n                    </NavLink>\r\n                </MyModal>\r\n            }\r\n            <div className={S.learning}>\r\n                {status === \"loading\" ? <CircularProgress/>\r\n                    : <div className={S.workSpace}>\r\n                        <div className={S.workSpace_container}>\r\n                            {!modeStart\r\n                                ? <>\r\n                                    <h2>Welcome to learning mode with It-incubator bro!!</h2>\r\n                                    <div className={S.instruction}>\r\n                                        <p>In this mode you can to learn indefinitely with cards prepared by you or your\r\n                                            friends.</p>\r\n                                        <p>If you are ready then press start!!!</p>\r\n                                    </div>\r\n                                    <span className={S.start} onClick={onStartClick}>Start</span>\r\n                                </>\r\n                                : <Card\r\n                                    card={currentCard}\r\n                                    setCurrentCard={setCurrentCard}\r\n                                    getNewCard={getCard}\r\n                                />\r\n                            }\r\n                        </div>\r\n                        {modeStart && <span className={S.exit} onClick={() => setShowModal(true)}>Exit</span>}\r\n                    </div>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n})\r\n\r\n","import React from \"react\";\r\nimport S from \"./MiniNav.module.css\"\r\nimport decks from \"../../MainCommon/Icons/decks.svg\"\r\nimport profile from \"../../MainCommon/Icons/profileIcon.svg\"\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport function MiniNav() {\r\n    return (\r\n        <div className={`${S.miniNav} `}>\r\n            <NavLink to=\"/app/decks\">\r\n                <div className={`${S.menuItem} ${S.home}`}>\r\n                    <img src={decks} alt=\"\"/>\r\n                </div>\r\n            </NavLink>\r\n            <NavLink to=\"/app/profile\">\r\n                <div className={`${S.menuItem} ${S.about}`}>\r\n                    <img src={profile} alt=\"\"/>\r\n                </div>\r\n            </NavLink>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport S from \"./Main.module.css\"\r\nimport {Header} from \"./Header/Header\";\r\nimport {HashRouter, Route} from \"react-router-dom\";\r\nimport {Profile} from \"./Profile/Profile\";\r\nimport {Decks} from \"./Decks/Decks\";\r\nimport {Cards} from \"./Cards/Cards\";\r\nimport {LearningMode} from \"./Learning/LearningMode\";\r\nimport {MiniNav} from \"./Header/MiniNav/MiniNav\";\r\n\r\nexport const Main: React.FC = props => {\r\n    return (\r\n        <div className={S.main}>\r\n            <Header />\r\n            <MiniNav/>\r\n            <div className={S.content}>\r\n                <HashRouter>\r\n                    <Route path={\"/app/profile\"} render={() => <Profile />}/>\r\n                    <Route path={\"/app/decks\"} render={() => <Decks />}/>\r\n                    <Route path={\"/app/cards/:deckID\"} render={() => <Cards />}/>\r\n                    <Route path={\"/app/learning/:deckID\"} render={() => <LearningMode />}/>\r\n                </HashRouter>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {SandBox} from \"../Components/Common/SandBox/SandBox\";\r\nimport {Page404} from \"../Components/Common/Page404/Page404\";\r\nimport {LoginContainer} from \"../Components/Features/Authorization/Login/LoginContainer\";\r\nimport {RegistrationContainer} from \"../Components/Features/Authorization/Registration/RegistrationContainer\";\r\nimport {RecoveryContainer} from \"../Components/Features/Authorization/RecoveryPass/RecoveryContainer\";\r\nimport {NewPassContainer} from \"../Components/Features/Authorization/NewPass/NewPassContainer\";\r\nimport {Main} from \"../Components/Features/Main/Main\";\r\n\r\nexport const Routes: React.FC<any> = props => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route exact path={\"/\"} render={() => <Redirect to={\"/app/profile\"}/>}/>\r\n                <Route path={\"/app\"} render={() => <Main />}/>\r\n                <Route path={\"/login\"} render={() => <LoginContainer/>}/>\r\n                <Route path={\"/registration\"} render={() => <RegistrationContainer/>}/>\r\n                <Route path={\"/recovery\"} render={() => <RecoveryContainer/>}/>\r\n                <Route path={\"/new-password/:token\"} render={() => <NewPassContainer/>}/>\r\n                <Route path={\"/sand-box\"} render={() => <SandBox/>}/>\r\n                <Route path={\"/404\"} render={() => <Page404/>}/>\r\n                <Redirect from={\"*\"} to={\"/404\"}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport MuiAlert, {AlertProps} from '@material-ui/lab/Alert'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../Store/store\";\r\nimport {setAppStatus} from \"../../../Store/app-reducer\";\r\n\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />\r\n}\r\ntype ErrorSnackbarPropsType = {\r\n    error?: string\r\n}\r\nexport const ErrorSnackbar: React.FC<ErrorSnackbarPropsType> = props => {\r\n    const appError = useSelector<AppStoreType, string | null>(state => state.app.error)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n        dispatch(setAppStatus(\"idle\"))\r\n    }\r\n    const openValidate = appError !== \"you are not authorized /ᐠ-ꞈ-ᐟ\\\\\" && (appError !== null || props.error !== null)\r\n    return (\r\n        <Snackbar open={openValidate} autoHideDuration={6000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"error\">\r\n                {appError || props.error}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\n","import React, {useEffect} from 'react';\nimport './App.css';\nimport {HashRouter} from \"react-router-dom\";\nimport {Routes} from \"./Routes\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../Store/store\";\nimport {RequestStatusType} from \"../Store/app-reducer\";\nimport {ErrorSnackbar} from \"../Components/Common/ErrorSnackbar/ErrorSnackbar\";\nimport {CircularProgress} from \"@material-ui/core\";\nimport {checkingAuthorization} from \"../Store/auth-reducer\";\n\nexport const App: React.FC<any> = props => {\n    const status = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\n    const isInitialized = useSelector<AppStoreType, boolean>(state => state.app.isInitialized)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(checkingAuthorization())\n    }, [dispatch])\n\n    if (!isInitialized) {\n        return <div style={{position: 'fixed', top: '50%', textAlign: 'center', width: '100%'}}>\n            <CircularProgress/>\n        </div>\n    }\n    return (\n        <div className=\"App\">\n            {status === \"failed\" && <ErrorSnackbar/>}\n            <HashRouter>\n                <Routes />\n            </HashRouter>\n        </div>\n    );\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n\r\n}\r\n\r\nexport const profileSlice = createSlice({\r\n    name: \"profile\",\r\n    initialState: initialState,\r\n    reducers: {\r\n\r\n    }\r\n})\r\n\r\n// thunks\r\n\r\n// types\r\nexport type ProfileActionsType = any","import {combineReducers} from \"redux\";\r\nimport thunkMiddleware, {ThunkAction} from \"redux-thunk\";\r\nimport {ProfileActionsType, profileSlice} from \"./profile-reducer\";\r\nimport {AuthActionsType, authSlice} from \"./auth-reducer\";\r\nimport {registerSlice, RegistrationActionsType} from \"./registration-reducer\";\r\nimport {RecoveryPassActionsType, recoverySlice} from \"./recovery-pass-reducer\";\r\nimport {AppActionsType, appSlice} from \"./app-reducer\";\r\nimport {configureStore} from \"@reduxjs/toolkit\";\r\nimport {DecksActionsType, decksSlice} from \"./decks-reducer\";\r\nimport {CardsActionsType, cardsSlice} from \"./cards-reducer\";\r\nimport {learningSlice} from \"./learning-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    profile: profileSlice.reducer,\r\n    auth: authSlice.reducer,\r\n    registration: registerSlice.reducer,\r\n    recovery: recoverySlice.reducer,\r\n    app: appSlice.reducer,\r\n    decks: decksSlice.reducer,\r\n    cards: cardsSlice.reducer,\r\n    learning: learningSlice.reducer\r\n})\r\n\r\nexport const store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware: getDefaultMiddleware => getDefaultMiddleware().prepend(thunkMiddleware)\r\n})\r\n// types\r\nexport type AppStoreType = ReturnType<typeof rootReducer>\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, AppStoreType, unknown, AllAppActionsType>\r\nexport type AllAppActionsType =\r\n    ProfileActionsType\r\n    | AuthActionsType\r\n    | RegistrationActionsType\r\n    | RecoveryPassActionsType\r\n    | AppActionsType\r\n    | CardsActionsType\r\n    | DecksActionsType\r\n\r\nexport type AppDispatchType = typeof store.dispatch\r\nexport type ThunkApiType = {\r\n    dispatch: AppDispatchType,\r\n    state: AppStoreType,\r\n    rejectValue: string\r\n}\r\n//@ts-ignore\r\nwindow.store = store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App/App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./Store/store\"\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}